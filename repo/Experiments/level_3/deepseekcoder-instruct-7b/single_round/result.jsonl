[
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Input-Output Conditions",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_output_dir_type",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Exception Handling",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_io_error_handling",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Edge Case Handling",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_none_output_dir",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Functionality Extension",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_no_directories_warning",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Annotation Coverage",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_function_annotations",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Code Complexity",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_cyclomatic_complexity",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Code Standard",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_check_code_style",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Context Usage Verification",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_stream_history_log_dirs_method_calls",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "mrjob.hadoop.HadoopJobRunner._stream_history_log_dirs",
        "type": "Context Usage Correctness Verification",
        "test": "tests/test_hadoop.py::StreamHistoryLogDirsTestCase::test_correct_hadoop_log_dirs_usage",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\'s \\n\\'\\n\\'s \\c\\n\\n\\'s\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'c.c\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'s\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'orgorgo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\org\\n\\n\\n\\l\\n\\n\\n\\l\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\u\\u\\n\\n\\n\\l\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\u\\n\\n\\n\\n\\n\\n\\'c\\n\\n\\c\\c\\n\\rl\\c\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\n\\c\\n\\n\\n\\c\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\c\\c\\n\\c\\c\\c\\c\\task\\task\\c\\n\\n\\n\\n\\n\\h\\n\\n\\n\\c\\n\\n\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\task\\task\\n\\n\\task\\n\\rl\\to\\n\\n\\n\\n\\n\\n\\n\\n\\task\\n\\n\\n\\task\\2\\c"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Input-Output Conditions",
        "test": "'tests/test_httperror.py::TestHTTPError::test_to_json_with_custom_handler'",
        "completion": "\n\n\n\n\n2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.\n\n\n\n\n\n\n\n\n\n\n\n22.\n.\n\n\n\n\n\n\nto\n\n\n\n\n\n\n\n    to\nto.\n       to.tototo.\n   \ntoto.\nto toto to\nto.\n   \n   \n\n\n\n\n   \n\n\n   \nto\n   \nto-to.to.to.to\nto\n\n\nto\nto\n\n\nto.\n    .\nto\n\n\n\n\n\nto\n\n\nto.to-to.\nto.to.to.to\nto.\nto\n\n\n\n\n\nto.to to2nd\nto\nto\n2\nto\n\nto-to to.to-to to toe toto to toe-to.\n\n\n\n\n\n\n\n\n   \n   \nto-to.to.to.\n\n\n\n\n22\n\n\n\n\n\n\n\nto.to.\nto.to\n\n\n       to.\n\n\n\n\nto.tomlto.\n\n\n\n\n   \n\n22.0.\n       \n\n2.to.to.to.to.to\nto.e.to.\n       \n       \n       \n       \n       \n       to.\n       \n       \n       \n       to.\n\n       \nto.\n\n\n\n\n\n\n       \n       \n\n\n\n\n       to.\n\n\nto.\ntore.\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n       \n\n\n\n\n       to.\n       to.\n       to.toml\n\n\n\n\n2.\n\nto.org\nto.d.p.\nto.d.to.\n\nto.\nd.2e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto:\n\n2.to.to.to.\n\n\n\n\n\n\n\n\n\nto\n\n\n\n\nto.to.to\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.to.\n\n   \n\n\n\n\n\n\n   \n\n\n\n\ntoto2\n\n\nto.\n\n\n\n   0,\n\n\n   \nto:\nto\ntoto to\nto toto-toto totototototototo totototo tod, tod tod tod0.\n\nto to .to tod.d: tos tos tod.totototomdto toto to\nto toe tototo\n\n    toetoe\ntoto toe2.\nto.to.2.d.to.dghd.topytopytotopyy\n\n\nd.\n\n\n\nto.\nto\n\n\nto.\n\n\nto.to-2.orge tos to tod.to toe2.to.to.to tod toto200\nto to to to to totototo toe toe tototo toe tod tos2.c: toe to2.h\ntotom2ndtoorgorgorge tototo222.to tototo to tomd toto totopytopytotoghm.toto toe toe toe, topymd, to\n        to\n\nto-toc,e7e toeorg\n   0epyepymdpyt toh2xpyp:horgorgnachprnghd.pytachypye:\ntpytopytoto2h\ufffdn''s to22dpytopy22ndy0e toy2ndh0e tot.epyto-tomd.eaktopyt totbyhby"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Exception Handling",
        "test": "'tests/test_httperror.py::TestHTTPError::test_to_json_invalid_handler'",
        "completion": "\n\n\n\n\n2.org.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.\n\n\n\n\n\n\n\n\n\n\n\n22.\nto.\n\n\n\n\n\nto\n\n\n\n\n\n\n   2e.\n.to.to.totototo\n\nto toto.2.\n   \nto.\n   \n\n\n\n\n   \n\n   \n\n\n   \n    to\n\nto-to.tototototo\nto\n\nto\nto\n\n\n\nto\n   2.\nto\n\n\n\n\nto\nto\n\nto.to-to\nto toto.to.2nd\n\n\n\n\n\n\n\n\n\n\ntoto.to toe.to\nto-2nd\nto-to tos toto-to-to-to.to.to.c.\nto.to\n\n   to.to.to.to.to.to.\n\n\n\n\n\n\n\n22\n\n\n\n\n\n   org.to.to.\n\nto.\n\n\n\n\n\n\n\n\n\n\nto.to.\n\n\n\n\n   \nto\n\n\n\n\n\n\n       \n\n\n.to.to.to.to.to.to.e.to.e.\n       \n   \n\n\n       \n       e.\n       \n       \n\n       \n       to.\n       \n.to-\n\n\n\n\n\n       \n       \n\n\n\n\n       re.\n\n\nto.to.to.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n       to\n\nto.\n       to.h2.\n\n\n\n2.\n\n\n\n       p.p.p.d.\nto-to.d.t.re.t.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.2.pyto.to.to.\n\n\n\n\n\n\n\ntoto\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n.to\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntomdto.\n   \n   \n\n\n\n\n   0, to to to\nto\nto to\nto.to to\nto tototototo totototo toto to tottotototod, to\n\ntohto.\n\n   22.to tod.d: tototototo tototo totototo tod to to\nto toe to\nto\n\n\ntop.orge tod.to.org.t.to.2.\nto to tod.totopydpyt.\n\ny\n\n\n\n   \nto.\nto.to\nto.\nto.\nto.pyto:\n2.org.to.to: to.to tos2.to.t.to tod toto200to toto toto totototototo toe toe to2.e tod's2nd-to.t\n\n\n   0toto toe2ndorgorgorge toe.222ndto toto to to totototopytopypytopyc.pyc: toe toe toe toe, top, tos, tot\ntop.pyc,e toe2org: ``e0e2ndhght:hpytpyt-horgorgn't,ypy.pytpyt toe\ntopyt:pytoto2n``n's to22ndtotogh22ndymdghy2nd2ndtoghtpyt.t'toghytomdbytbyhpytbytby"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Edge Case Handling",
        "test": "'tests/test_httperror.py::TestHTTPError::test_to_json_no_title_description'",
        "completion": "\n\n\n\n\n2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   2\n\n\n\n22\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   2.\n\n.\n       \n       to.to.\n   \n   2.\nto\nto\n\nto.\n   \n   \n   \n\n   \n\n\n\n   \n   \n   \n   \n   \n   \nto.\n\n\n\n\n   \nto\n\n\n\nto\n   2.\nto\n\n\n\n\n\n\n\n\n\nto.to-to.\ntocl.to.2.\nto.\nto\n\n\n\n\n\nto to\nto2.to\n\n\n\n2\nto\n\nto-to.to-told.2.0e to to\n       to to\n\n\n\n\n       to.\n    tos.\n   \n   \n   2.\n\n\n\nto.2.\n\n\n\n\n   org.\n\n   \nto\nto.\n\n       \n       \n\n\n\n\nto.to.to.\n\n\n\nto.\n\n2.\n\n\n\n       \n\n\n.\n   e.to.to.to.\n       e.e.\n       \n       \n   \n   \n       \n       e.\n       \n       \n       \n       \n\n\n       \n       to.\n\n\n\n\n\n\n\n       \n       \n\n\n       \n       to.\nto.\nto.\n\n\n\n\n\n\n\nto\n\n\n\n       \n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n       to.\n       \n       p.\n\n\n\n\n\n\n\n2.\n\nd.p\nto.p.p.p.d.d.p.p.d.t.2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.re.to.to.\nto.s.\n\n\n\n\n\n\n\nto\n\n\n\n\n\n\n\n   2.\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n   \n\n\n\n\n   \n\n\n\n\n\n   \n.\n\n\n   \n\n\n\n   \n   \n   \n\n\n   \n   2.\n\n\n\n\n\n\n\n\n\n   \n   \n   \nto:\nto\nto to to\nto\ntotototo to\ntotototototo tottohto to, tod todghd to\n\n\n   2d.to tos to : tos tos tod.to tohghttoto to\nto to tod tototo\n\ntototon\ntoto.\ntoto.to.to.2.2.\nto.hghd.todpyto totopyy tod.d.\n\n\n\nto.\nto\n\n\n\n\n\n\n\nto.to.2.org.to. to tos.to toe2.to.to.t tos toto20d0d toe toe toto toto toe toe tos2nde tod tos2.c.to.to2.h.0.e22c.orgorgebytoc222,h toe toh to\n   to topyc.toc``epyc's toe2orge,e, toh, toc, ton to\ntop,e,e5e2e\n       e0e2ndhghnghh2epyh tohorg.hachp.h.h.pytpyh:\n\nn's:h2n``e :h\ufffdt22ndttopy22ndc:eachy2.toghe toe tot,tachhldytoakorpyt orhbyhby"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Functionality Extension",
        "test": "'tests/test_httperror.py::TestHTTPError::test_to_json_with_indent'",
        "completion": "\n\n\n\n\n2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntoto.\n.\n\n\n       to.tocl.\n   \nto2.\n\ntoto.\n\n\n\n\n\n\nto.\nto.\n\n\n   \nto\nto to\nto.\ntotocltoto\n\n\n\n\nto\n\n\n\n\nto to\nto.\nto-to\n\n\n\n\nto\n\nto\nto-to.\ntocl.to.2nd.to.to.\n\n\n\n\n\nto tos22nd\n\n\n\n\n2\n\n\n\nto tos to.to-to tol.0.to-to\nto to\nto to\n\n\n\n\n   \n   \n   \n\n\n   \n   2.\n\n\n\n\n22\n\n\n\n\n\n\n   to.to.\n\nto.to\n\n       \n       \n\n\n\n\n\nto.to.\nto.\n\nto.to\n\n2.\n\n\n       \n\n\n.\nto.to.to.to.\n\n       \n   \nto,\n       \n       \nto\n\n       \n       e.\n       to.\n\n       \n       \n\n\n       \nto.\n\n\n\n\n\n\n\n       \nto.\n\n\n       to.to\n\nto.to.to.\n\n\n\n\n\nto\n\n\n\n\n\n       \n       \n\n\n\n\n\n       \n\n\n\n\n\n\n\n       \n\n\n\n\n\n\n       to\n       e.\n       to.toml\n\n\n\n\n\n\n\nto.d.to\n\nto.d.\n\nto.to.d.t.to.d.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.to.to.to.\n\n\n\n\n\n\n\n\n\nto\n\n\n\n\n\n\n\n\n   \n\n\nto.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.to.\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\nto,\n\n\n\n   \nto:\n\nto.to to\nto tototototo to\nto-tototoetototototo tod, tod tod tod to\nto to2d to tod tos : totto to\nto\nto tod tod to .to to\nto toe\ntoto\n\nto to toto\nto tod.to toto.to.to.2.\n\nto.md.htoh .toyto tos toy to tot.y\n\n\nto.\nto\n\n\n\n\n\n\n\nto: toto.orge.topy to tos.to to to2 to.to.to tom tototo20d0e totopy toe tototo to to toe toto ton toe tod to2\n\nto.to to22x\n   0e22.orgorg\n\ntotod222.to toe to to toh toto totopytopye``e\nd:e toe2orge, ``e,h, toc, ton toto toe top.e5e2e\n   e0e0xpytghh2n``npye toorgorgn's toh.hldepye-to\ntoprtopytoghs2n\ufffdnpytopy22dpytotopr2ndeindebyh2.toghe toe.e totachhldytoghtbyhpytbyhby"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Annotation Coverage",
        "test": "'tests/test_httperror.py::TestHTTPError::test_to_json_annotations'",
        "completion": "\n\n\n\n\n2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n22.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.to.to.to.to.to.\n   \n\nto.2.\n\n   \n\n\n    to\n\n\n\n\n\nto\nto\n\n   \n   \nto-to-to.\nto toortoto\n\n\n\n\n\n\n\n\n\n\nto.\nto.\nto to\n\n\n\n\ntocl\n\nto.to\n\n\n\n\n\ntoclto2.\n\n\n\n\n\n\n\n\n\n\nto toto to2nd\n\n\n\n\n2\n\n\n\nto\n        to.to-to to.to.to.to\nto.to-to-to\nto.to-to to.\n   \n   \n   \nto-to\n\n\n\n22\n\n\n\n\n\nto.to.to.\n\n\n\n\n\n\n\n       to\n\n\n\n\n       to.to.\n\n\n\n\n\nto.\n22.0.\n       \n\n2.\nto.to.to.to.\n\n       to.to.\n\n       \n       \n   \n       \n       to.\n       \n       2.e.\n       \n       \n       \n.\n\n       \n\n\n\n\n       to.\nto.\n\n       to.to.\n\n\n\ntoe.\n\n\n\n\n\nto\n\n\n\n\n\n\n       \n\n\n\n\n       \n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       e.\n       \n       p.to.e.\n\n\n\n\n2.\n\n\n\norgto\n       e.d.\n\nto.d.\n\n\nto.d.d.d.to\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto-to.2.py.pyto.py.\n\n\n\n\n\n\n\n\nto\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.to.\n\n\n\n\n\n\n\n\n   \n   \n\n\n    tod2d\n\n\nto\n\n\n\n\n0,\n\n\n\nto:\n   \n   toto to\n\n   \ntototo to\ntotototo tos tod.tohto, toto\ntohtod.\n\nto2d tod tod: tos tos to\nto\ntotopyd, tos .to tod .to\ntoto\n\ntoto toto\ntoto to toto toto.to.to.2.\n.t,\nd.e ,\nd.to.toy\n\nto\nto\nto to toto.to\nto.\n.\n\n\n\n\ntopyto.orgo\nto.to:\nto.to.2.to.to.to toto toto200.to tos toe toetototo toe toe toto toe tod toe2\n\nto.to\n2.to\n   0.22ndorgorgorg\ntoto-222.to: toe to tod.topytopypytopyto\nto.to toe toe toe,e,py, orp,\n       to toc.e top.e toe toorg:\n       e20slde7e2x :hpyorghorgorgn,t,h.h.pye toe :\n\ntopytopyghs2n``n's-22dpytoto22ndo :eakpy2ndtoghe\n   pye,t toh tom:hbyhldhndbyhby"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Code Complexity",
        "test": "'tests/test_httperror.py::TestHTTPError::test_to_json_complexity'",
        "completion": "\n\n\n\n\n2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.\n\n\n\n\n\n\n\n\n\n\n\n22.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.to.to.to.to.to.\n   \n    toe2.\n   \nto.\n    to\n\n\n\n\nto\nto\n\n\n   \n   to.\n   \n   \n   5tocltoto\n\n\n\n\n   \n\n\n\n\nto.\nto.\ntoto\n\n\n\nto\nto\n\n\nto-to\n\n\n\n\nto.toto.\nto.\n\n\n\n\n\n\n\nto.to to to to\n\n\n\n\n2\n\n\n\nto\n        to.to-to to.e.to to to\nto.to\n\nto to\nto-to-to.\n   \n   \n   \n   \n   \n\n\n\nto.2\n\n\n\n\nto.org.to.\n   \n   2.\n\n\n       to\n\n\n\n\n       to.to.\n\n\n\n\nto.to.\n2.0\n\n       \n\n\n.to.to.to.to.\n\n       \n   to.\n\n\n       \n       \n   \n       \n       to.\n       \n       2.\n       to.\n       \n       \n.\n\n       \n\n\n\n\n       to.\n\n\n\n       to.to.\n\n\n   \nto.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       e.\n       \n       p.\n       2.\n\n\n\n\n2.\n\n       p.p.p.pycl.\n\nto.to.\n\n\nto.p.d.\n\n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\nto-to.2.py.to.py.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n   \n.\n\n\n   \n\n.\n\n   \n   5\n\n\n    tod2\n   \n\n   \n\n\n\n00,\n\n\n   \nto:\n   \n   to to\n\n   totototo to\ntoto toto toe todtoytopytototo\ntohto.\n\n\nto2d tod tod: tod:\nto\nto\n   3.d, tod .to\n    .totototo\ntoto to tototo toto to tototo.d.to.2.2.\nto.d.e ,\n   3.totopyy\n\nto tod.2.to.to.\nto.\n.\n\n\n\n\nto topy2.org.to.py top.to.2.2.to.to tom tototo200.to toypy toe totototo toe toto toto toe tod toe2\ntoc.to\n   2.0.to.22d.orgorgebytocopy222.to.to to to tom totopytopypytopytopyc.totopye2eorge,pypymd,\n       to ton toc toc,e5e toe toorg:e :e0xpyebertachh2x0p``norgorgn.e2nd.h.pyepye:\ntopytopypyto2n``n's top22dpytotopy2.e :ebyh2ndtopytpyto.e,e toh tomachebytachhldbyhby"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Code Standard",
        "test": "'tests/test_httperror.py::TestHTTPError::test_check_code_style'",
        "completion": "\n\n\n\n\n2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntoto.to.to.\n       1.\n   \n   \nto.2.\n   \nto.\nto.\n\n\n\n\nto\nto.\n\n\n   \nto\nto-to-tocl.tototo\n\n\n\n\n\n\nto\n\n\n\nto\n   2.\nto\n\n\n\n\n\nto\n\n\nto\nto\nto\n\ntocl.to.2nd\n\n\n\nto\n\n\n\n\n\nto to\nto tos to\n\n\n\n2\n\n\n\nto\n        to.to-to-to-to to to.to-to\nto\nto to\n\n\n\n\n   \n   \n\n\n\n   \n\n   \n\n\n\n\n\n22\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n       to.to.\n\n\n\nto.to\n22.0.\n       \n\n\n.\nto.to.to.to,\n       to.to.\n\n       \n       \n   e\n\n\n       \n        toc.\n       \n       0.\n\n       \n       \n\nto.\n\n\n\n\n\n\n       \n\n\n\n\n       to.to\n\n\nto.to.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n       to\n       \n\n       d.\n\n       \n\n\n\n\n\n\n\n\n       2p.d.d.d.\n\n\n\n\nto.c.d.t.d.d.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.re2.to.to.to.\n\n\n\n\n\n\n\n\n\nto\n\n\n\n\n\n\n\n   \n   \n\ntopyto\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   2.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.to.\n\n\n\n\n\n\n   \n   \n   \n\n\n\nto\n   \n   \n\n\n\n\n\n\n00,\n\n\n   \nto:\nto\nto.to to\nto totototo to\ntototo-totodtotototototototo\ntohtod.\n\nto tod tod tod: :tototo\nto :\n       reghd tos .to .\nto toe tototo\nto totototo to tototo toe toc.to.to2.2.\nto.\nd.to.hpyto.topyy\nto tod.to.to\nto.\nto\n.\n\n\n\n\n\nto.\ntopyorge.y topy tos.to to to2.to.to.to tod toto200d totopyto tototototo toe toto tototo toe tod tos2\nto toto\nto.2.to0m.2ndtoorgorgorgebytod222,\nto toto to tom toto.topytopye``e.c toe toe2e toe,pypymd,\n       to to tototocp toc,ebern72e :e toe20slde\nn2xpypghe``\n\n   e,\nto.pyc:hachp:\ntopytopypytopy2n``n''s\ufffd22dpytoghy2ndc:ebyy2ndtoh tot tom,\nto:hghyndwbytpytpytby\n"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Context Usage Verification",
        "test": "'tests/test_httperror.py::TestHTTPError::test_to_json_uses_to_dict'",
        "completion": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto-to-to.\n\n222\n\n\n\n\n\n\n\n\n    to\n\n\n\n\n\ntototo.to.to.to.to.to.to.\nto.2.to.to,\n\n\n\n\n\n   \n   \n\n\n   \n\n\n    toto to\n    to\n    tototocltoto\n\n\n\n\nto\n    to\n\nto to\nto.\nto.\nto.\ntoclto.to.to.to-to.\nto.to-to\n\nto.\nto\n\n\n\n\nto to to to to2.to to\nto to2 to\n\n\n        tos.c.to-to.e.to.to.to.to.to.to.to.to.\n   \n   \n\n\n   \n   \n   \n\n\n\n   22\n\n\n\nto'orgorg'to.to\nto\nto\n\n\n\n       to\n\n\n   \n\nto.to.\n\n   \n   \nto.\n\n\n\n\n\n       \n       \n2.to.to.h.to.to.\n       \n   \n   \n\n       \n       \n   \n\n\n        toe.\n       \n       \n       \n       \n\n       2.\n\nto.\n\n\n\n\n\n\n\n\n\n\n\n\n\n       to.\n\n\n\n\n\n\nto.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n       \n       t.\n\n       \n       \n\n\n       p.p.to\n\n\n\n\n\n\n\n\n\n\n\n\n       e.p.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.to.to.to.to.\n\n\n\n\n\nto.to\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\nto tod.\n   \n\n\n\n\n\n00,\n\n   5 toto to\ntototo to to to\nto to toto to to\ntoto tototoyto tod toy to, tos tod-to. Toto toto to to to to to to to: toto tos toto toto tod tos tod tod tod.e to\n\n\n\n\n   ton\n\nto to tototo topy tos tod2.\n\nto, tod.tpyd.toghs tos tod.to.yto.to to toto\nto.py.to.to.to: tos2.orgo tos to toto.to to to to to tod.to tos tototo200to toto tos toe tos toe toe tos tot2d tod tos2 to\nto.toto22m to0.to22toorgorgorgtotototo222d.to toe to toh toto totopytopyd toe.y toe toe2orgs toe topyh orp -toc toh.mdc,p,e toe toorg:h top5tpyhldn toh2xpyt-horgorgyprtoprn.yprtopytopye:\ntopytopytoto2n\ufffdn''s to22ndtototopr2ndyprtbyh2ndtoghd-topyttototohghyto:tbyhsepybyhby"
    },
    {
        "namespace": "falcon.http_error.HTTPError.to_json",
        "type": "Context Usage Correctness Verification",
        "test": "'tests/test_httperror.py::TestHTTPError::test_to_json_correct_dict_usage'",
        "completion": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto-to-to-to-222\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntotototo.to.to.to.to.to.\n       \nto.2.to-to.\n\n\n\n\n\n\n\n\n\n\n   \n\n\n    tototo\n\n   \n    tocltocltoto\n\n\n\n\nto\n\n\n\n\nto\nto to\nto.\n   \n\n\ntoclto to\nto.to-to\n\ntoclto-to2nd\nto\n\nto\n\n\n\n\n\nto to toto toe to\nto\nto-to-to-to-to.c.to-to.e.to.to.to.to-to to\n\n\n\n\n   \n   \n   \n\n\n   \n   \nto-to\n\n\n22\n\n\n\n\n\n\n\nto.to.to\nto.to\n\n\n       to.\n\n\n\n       to.to.\n\n\n\n\n   \nto\n\n\n\n\n\n       to.to.to.to.to.c.to.\n\n       \n   \n\n\n\n       \n       \n   \n\n\n       e.\n       \n       2.\n       \n       \n       2.\n\n       \n\n\n\n\n\n\n\n       \n\n\n\n\n\n       to.\n\n\n\n\n\n\nto.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n       \n\n\n\n\n\n       d\n\n\n\n       \n       \n\nto\n\n\n\n\n2\n\n\n\n\n\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nto.2.to.to.to.to.\n\n\n\n\n\nto.to\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n\n\n   \nto to\n   \n\n\n\n\n\n\n   0,\n\n\n   \nto\nto\ntoto toto to\nto totototo to\nto tototototototototoyto, tos, tohpyd.to toto2 toto toto to to to toto tos toto toto tod, tot tod tod.md.\n       \n\n\n   top.\n\ntoto tototo toto.totopy2.\n\nto.d.t.\n   pytototopytoc.pyto.to.py tod.to\nto.py.\n\n\n\nto:to.2.orgo tos toto: toe to toto to tod.to tomtototo200to toto-to toetotototo toe tos-tomds tod tos2\n\nto.toto\n\n\nto0.to22toorgorgorgtotototo222ndm:toto to top tototopypyepytopye top:e toe2orge toe,pyh orp -topyto\n\ntop,p,e toe toorg :md:e0xpyhldngh2xpyt top.orgorgnpyt0xpyc.pytpye top:ttopytoghs2t-topye to22d.totopr2ndymd,h2nd2d totbyhpyttototohldytowbytbymdbytbyh"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Input-Output Conditions",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_mkdir_input_output",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Exception Handling",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_mkdir_exception_handling",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Edge Case Handling",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_mkdir_edge_case_special_characters",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Functionality Extension",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_mkdir_logging",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Annotation Coverage",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_mkdir_annotation_coverage",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Code Complexity",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_mkdir_code_complexity",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Code Standard",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_check_code_style",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Context Usage Verification",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_mkdir_context_usage",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "mrjob.fs.hadoop.HadoopFilesystem.mkdir",
        "type": "Context Usage Correctness Verification",
        "test": "tests/fs/test_hadoop.py::HadoopFSTestCase::test_mkdir_context_usage_correctness",
        "completion": "\\2\\0\\l\\2\\0\\0\\2\\':\\':\\l\\0\\h\\2\\0\\2\\0\\1\\0\\0\\\n\\a\\2\\0\\':\\2\\0\\1\\0\\a\\0\\t\\2\\':1\\2\\':\\':\\':\\2\\0\\0\\2\\':\\1\\0\\0\\':\\2\\0\\0\\1\\0\\2\\2\\0\\0\\':\\\r\n\\2\\2\\0\\1\\1\\0\\0\\l\\':\\\r\n\\0\\0\\0\\2\\0\\2\\2\\2\\0\\2\\0\\0\\0\\s\\2\\0\\0\\0\\2\\0\\0\\1\\2\\h\\2\\2\\0\\0\\1\\0\\':\\1\\2\\2\\1\\0\\2\\2\\t\\2\\2\\':\\t\\2\\2\\0\\1\\0\\1\\1\\0\\0\\':1\\0\\2\\0\\s\\2\\0\\0\\2\\2\\1\\0\\0\\0\\':\\':',2\\1\\0\\':\\2\\0\\0\\2\\': \\0\\2\\2\\0\\1\\1\\0\\0\\':',',0\\1\\0\\2\\0\\':\\':\\2\\0\\2\\2\\2\\1\\':', \\':',',', \\1\\':\\0\\2\\0\\0\\2\\':\\0\\2\\2\\1\\0\\0\\0\\0\\0\\0\\1\\0\\2\\0\\0\\1\\2\\0\\0\\2\\2\\0\\1\\0\\':\\':\\':\\':\\0\\0\\0\\':\\':\\2\\0\\':\\2\\2\\0\\0\\0\\2\\1\\1\\0\\0\\0\\1\\0\\0\\1\\0\\0\\0\\2\\2\\0\\':',\\'\\0\\1\\0\\2\\0\\s\\0\\':\\t\\':\\2\\0\\1\\0\\0\\0\\2\\2\\2\\':',',0\\2\\2\\2\\0\\0\\1\\n\\0\\0\\1\\0\\0\\0\\0\\2\\2\\0\\2\\0\\0\\2\\0\\2\\0\\2\\2\\0\\0\\':\\0\\2\\0\\':', \\0\\':\\2\\2\\0\\0\\2\\2\\2\\2\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\2\\0\\2\\':\\2\\2\\2\\':\\'\\1\\0\\':',',0\\0\\1\\0\\':\\0\\2\\':',0\\':',',',2\\0\\0\\0\\':\\':',',2\\0\\':\\2\\0\\':',',1\\0\\':\\':',',',',',0\\1\\0\\':',',',',', \\0\\':',',2\\0\\1\\':0\\0\\':\\'2\\2\\0\\0\\2\\2\\2\\1\\0\\0\\':',0\\2\\':',',',',',',',',',',\\'\\0\\0\\0\\2\\0\\':',',',',',',',2\\0\\0\\':',',',',',',',',',',',',',\\'\\':\\':\\'\\0\\':\\':',',',',',',',',',',\\'0\\2\\':',':',',',',',',',',',',',',',',0\\0\\':\\':\\':\\0\\':2\\2\\1\\2\\':0\\':',2\\0\\0\\2\\0\\0\\':',',',',0\\':',1\\1\\0\\':\\2\\2\\0\\':\\0\\':',',',',',',',',',',',',',',',',',',',',0\\0\\':\\2\\2\\':',',2\\':\\2\\0\\2\\0\\':\\0\\0\\2\\0\\2\\0\\':\\2\\0\\2\\0\\2\\':\\0\\':\\0\\':\\0\\':\\0\\':\\0\\':"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Input-Output Conditions",
        "test": "tests/test_config.py::test_following_output",
        "completion": "The `following` function should retrieve a list of all `Source` objects stored in the \"following\" section of the `Config` instance. Here's how you can implement the `following` function:\n\n```python\ndef following(self):\n    \"\"\"Retrieves a list of all Source objects stored in the 'following' section of the Config instance.\"\"\"\n    if not self.cfg.has_section(\"following\"):\n        return []\n\n    sources = []\n    for nick, url in self.cfg.items(\"following\"):\n        sources.append(Source(nick, url))\n\n    return sources\n```\n\nThis function checks if the \"following\" section exists in the config. If it does, it iterates over the items in the section, creates a `Source` object for each item, and appends it to the `sources` list. Finally, it returns the list of `Source` objects. If the \"following\" section does not exist, it returns an empty list.\n"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Exception Handling",
        "test": "tests/test_config.py::test_following_no_section",
        "completion": "Based on the context provided and the requirements you've listed, I will write a function named `following` for the `Config` class. This function will retrieve a list of `Source` objects stored in the \"following\" section of the `Config` instance. If the \"following\" section does not exist, it will log a debug message and return an empty list.\n\nHere's the function:\n\n```python\nimport logging\n\nlogger = logging.getLogger(__name__)\n\ndef following(self):\n    \"\"\"\n    Retrieve a list of Source objects from the \"following\" section of the Config instance.\n\n    :return: list. A list of Source objects stored in the \"following\" section of the Config instance.\n    \"\"\"\n    following_list = []\n\n    if not self.cfg.has_section(\"following\"):\n        logger.debug(\"The 'following' section does not exist in the config.\")\n        return following_list\n\n    for nick, url in self.cfg.items(\"following\"):\n        following_list.append(Source(nick, url))\n\n    return following_list\n```\n\nThis function iterates over the items in the \"following\" section of the config, creates a `Source` object for each item, and appends it to the `following_list`. If the \"following\" section does not exist, it logs a debug message and returns an empty list.\n\nPlease note that the `Source` class is assumed to be defined elsewhere in your code, and it should have a constructor that accepts a nickname and a URL. If the `Source` class is defined differently, you may need to adjust the function accordingly.\n"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Edge Case Handling",
        "test": "tests/test_config.py::test_following_empty_section",
        "completion": "The `following` function should retrieve a list of all `Source` objects stored in the \"following\" section of the `Config` instance. Here's how you can implement the `following` property:\n\n```python\n@property\ndef following(self):\n    \"\"\"Retrieve a list of all Source objects stored in the \"following\" section of the Config instance.\"\"\"\n    if not self.cfg.has_section(\"following\"):\n        return []\n\n    sources = []\n    for nick, url in self.cfg.items(\"following\"):\n        sources.append(Source(nick, url))\n\n    return sources\n```\n\nThis property will return an empty list if the \"following\" section does not exist in the config. Otherwise, it will iterate over the items in the \"following\" section, create a `Source` object for each item, and append it to the `sources` list, which it will then return.\n\nPlease note that this implementation assumes that the `Source` class has a constructor that accepts a nickname and a URL. If the `Source` class has a different constructor, you may need to adjust the code accordingly.\n"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Functionality Extension",
        "test": "tests/test_config.py::test_following_filter_invalid_urls",
        "completion": "To implement the `following` function that retrieves a list of all `Source` objects stored in the \"following\" section of the `Config` instance, we need to iterate over the items in the \"following\" section, create a `Source` object for each item, and append it to the \"following\" list. We also need to handle the case where the \"following\" section does not exist and log a debug message in such a case.\n\nHere's the implementation of the `following` function:\n\n```python\ndef following(self):\n    \"\"\"\n    Retrieves a list of all Source objects stored in the \"following\" section of the Config instance.\n    If the \"following\" section does not exist, it logs a debug message and returns an empty list.\n    :return: list. A list of Source objects stored in the \"following\" section of the Config instance.\n    \"\"\"\n    following_list = []\n\n    if not self.cfg.has_section(\"following\"):\n        logger.debug(\"No following section found in config.\")\n        return following_list\n\n    for nick, url in self.cfg.items(\"following\"):\n        if url:  # Ensure that the URL is not empty\n            following_list.append(Source(nick, url))\n\n    return following_list\n```\n\nThis function first checks if the \"following\" section exists in the config. If it does not exist, it logs a debug message and returns an empty list. If the section exists, it iterates over the items in the \"following\" section, creates a `Source` object for each item with the nickname and URL, and appends it to the `following_list`. Finally, it returns the `following_list`.\n\nPlease note that this function assumes that the `Source` class has a constructor that accepts a nickname and a URL. If the `Source` class has a different constructor, you may need to adjust the code accordingly.\n"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Annotation Coverage",
        "test": "tests/test_config.py::test_following_annotations",
        "completion": "The `following` function can be written as follows:\n\n```python\ndef following(self: Config) -> List[Source]:\n    \"\"\"Retrieves a list of all Source objects stored in the 'following' section of the Config instance.\n\n    :param self: Config. An instance of the Config class.\n    :return: list. A list of Source objects that are stored in the 'following' section of the Config instance.\n    \"\"\"\n    following_section = self.cfg.get(\"following\", {})\n    sources = []\n    for nick, url in following_section.items():\n        source = Source(nick, url)\n        sources.append(source)\n    return sources\n```\n\nThis function retrieves the 'following' section from the config, iterates over the items in this section, creates a Source object for each item, and appends it to the 'following' list which is then returned. If the 'following' section does not exist, an empty list is returned.\n\nPlease note that the `Source` class is used in the function, but it is not defined in the provided context. You need to make sure that the `Source` class is defined and accessible in the same scope where you define this function.\n\nAlso, the type hint `List[Source]` is used to indicate that the function returns a list of `Source` objects. This is a feature of Python's type hinting system, and it helps with static type checking and autocompletion in some IDEs.\n"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Code Complexity",
        "test": "tests/test_config.py::test_following_complexity",
        "completion": "The `following` function can be implemented as follows:\n\n```python\ndef following(self):\n    \"\"\"Retrieves a list of all Source objects stored in the 'following' section of the Config instance.\"\"\"\n    if not self.cfg.has_section(\"following\"):\n        return []\n\n    sources = []\n    for nick, url in self.cfg.items(\"following\"):\n        source = Source(nick, url)\n        sources.append(source)\n\n    return sources\n```\n\nThis function iterates over the items in the \"following\" section of the Config instance, creates a Source object for each item, and appends it to the \"following\" list. If the \"following\" section does not exist, it returns an empty list.\n\nThe cyclomatic complexity of this function is 4, which is less than the required 5. The function maintains a cyclomatic complexity of 5 or less by using a single if statement and a single for loop, which are the two basic structures in the function.\n\nPlease note that the `Source` class is assumed to be defined elsewhere in the code, and it should have a constructor that accepts a nickname and a URL.\n"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Code Standard",
        "test": "tests/test_config.py::test_check_code_style",
        "completion": "The following function retrieves a list of all Source objects that are stored in the \"following\" section of the Config instance. It iterates over the items in the \"following\" section, creates a Source object for each item, and appends it to the \"following\" list. If the \"following\" section does not exist, it logs a debug message and returns an empty list.\n\nHere is the function:\n\n```python\ndef following(self):\n    \"\"\"Retrieves a list of all Source objects that are stored in the \"following\" section of the Config instance.\"\"\"\n    following_list = []\n    if self.cfg.has_section(\"following\"):\n        for nick, url in self.cfg.items(\"following\"):\n            following_list.append(Source(nick, url))\n    else:\n        logger.debug(\"No 'following' section found in the config.\")\n    return following_list\n```\n\nThis function uses the `has_section` method to check if the \"following\" section exists in the config. If it does, it uses the `items` method to iterate over the items in the section and creates a Source object for each item using the nick and url, and appends it to the `following_list`. If the \"following\" section does not exist, it logs a debug message and returns an empty list.\n\nPlease note that this function assumes that the Config instance has a `cfg` attribute that is an instance of `configparser.ConfigParser` and that the `Source` class is defined in the same module.\n"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Context Usage Verification",
        "test": "tests/test_config.py::test_following_uses_cfg",
        "completion": "The `following` function can be implemented as follows:\n\n```python\ndef following(self):\n    \"\"\"Retrieves a list of all Source objects stored in the 'following' section of the Config instance.\"\"\"\n    following_section = self.cfg.get(\"following\", fallback=None)\n    if following_section is None:\n        return []\n\n    sources = []\n    for nick, url in following_section.items():\n        source = Source(nick, url)\n        sources.append(source)\n\n    return sources\n```\n\nThis function retrieves the 'following' section from the Config instance. If the 'following' section does not exist, it returns an empty list. If the 'following' section exists, it iterates over the items in the section, creates a Source object for each item, and appends it to the list of sources. The list of Source objects is then returned.\n\nPlease note that this function assumes that the 'following' section in the Config instance is a section in the configparser object, and each item in the section is a tuple of a nickname and a URL. It also assumes that the Source class has a constructor that takes a nickname and a URL as arguments.\n\nAlso, please note that this function does not handle cases where the nickname or URL in the 'following' section is not a string. This function does not check if the nickname is already in use, and it does not check if the URL is a valid URL. These checks should be implemented if necessary.\n"
    },
    {
        "namespace": "twtxt.config.Config.following",
        "type": "Context Usage Correctness Verification",
        "test": "tests/test_config.py::test_following_correct_parsing",
        "completion": "The `following` function can be implemented as follows:\n\n```python\ndef following(self):\n    \"\"\"Retrieves a list of all Source objects stored in the 'following' section of the Config instance.\"\"\"\n    following_section = self.cfg.get(\"following\", fallback=None)\n    if following_section is None:\n        return []\n\n    source_objects = []\n    for nick, url in following_section.items():\n        source_objects.append(Source(nick, url))\n\n    return source_objects\n```\n\nThis function retrieves the 'following' section from the Config instance. If the 'following' section does not exist, it returns an empty list. If the 'following' section exists, it iterates over the items in the section, creates a Source object for each item, and appends it to the list of source objects. The list of source objects is then returned.\n\nPlease note that this function assumes that the 'following' section in the config file is a section containing key-value pairs, where each key is a nickname and each value is a URL. If the format of the 'following' section in the config file is different, this function may need to be adjusted accordingly.\n"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Input-Output Conditions",
        "test": "tests/test_thread.py::TestThread::test_invalid_algorithm",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Exception Handling",
        "test": "tests/test_thread.py::TestThread::test_thread_capability_error",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Edge Case Handling",
        "test": "tests/test_thread.py::TestThread::test_no_matching_messages",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Functionality Extension",
        "test": "tests/test_thread.py::TestThread::test_thread_max_results",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Annotation Coverage",
        "test": "tests/test_thread.py::TestThread::test_thread_annotations",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Code Complexity",
        "test": "tests/test_thread.py::TestThread::test_thread_cyclomatic_complexity",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Code Standard",
        "test": "tests/test_thread.py::TestThread::test_check_code_style",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Context Usage Verification",
        "test": "tests/test_thread.py::TestThread::test_thread_context_usage",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "imapclient.imapclient.IMAPClient.thread",
        "type": "Context Usage Correctness Verification",
        "test": "tests/test_thread.py::TestThread::test_thread_correct_capability_check",
        "completion": "x1x returnx(return(q.bgscl-canon-canonq.qclq.q-lft.qcl_recl_qbsclbcmlx-reclclclclpp.x1x1xclclcltsclts_reclxcltscltscltsclx.xcltsclttqmlx1xclubts.reclts1.reclts.recl-reclrs.re.clrs.qie1xclubq.xbsclx.c.c.recl_re1x.q.q.qmlxbsxbsclcmclpi.q.q.qclqcl_qieclure_qio.rebsufqtsmlx1qgnqpyq-re.recltyx1q1qmlq.q.q.q.q.q.q.qcl.re.utfmlx.qmlc(q(qmlc(normal(normalqtsuf(qmlx0x.q.re.rb(normal_reclutq_q_fl_recl_q_qutqutqutqmlxufmlxelfc.f1x1stufmlc.qmlx1q1.qutqmlq.q.q.q.qslclubmlq0x.qmlx.q.qutql.q.q1x.q.q.q.q.q.q.q.q.q.q.q.t1q.q.q.q.qmlx.q.q.qutq.q.qioq.q.qmlqmlx.qutq.q.q.q.q.q.qmlx.q.normal_normal_normal_normal_normal_normalq-normal_unicodeq.re.q_normal_if_unicode_canon_unicodex.x.turex1xio.q.utfioqutq.qutqstr0xelfx1x0x0xelfxelfxioutq[qioqio.normalq0x\n\n   x0xube_utfioq[qmlxumclak,q,\n   x0x.normalqcnqmlxifml[qif(qutq[qutq(q.utfieclutqcmelt(qmlubelfc.return(qsl0x1stelfxchutchblutfclutcmclubmlx1xchutcmxclubustxperclubslubqpycm1xch[qstrclutq.normal(normalqpyqmlx1x1xclubqifclutqcmclubeltqmlubclubx-qclclustrqtoclcu, qxchutq.unicodexutfclx1xclxutfiomlx 0x1xchutmlx.toqieut_unicode_utfiox0xch_utfieclxcl_utfcl_unicodexclutfclutfclutfclutfmlxutfioqflutfclutfqmlxblutfieclxclxclxclx.utfclclxclumclutfclutfclx0xbsulclxclutbsclutfiebsxneclx0xclutfbsclubeclxutfclxchutclxblutfclutchbsxclxclx.xclclutclxcl_utfiomlxchufmlxbsieclumbsx1stufieclumbsx1stufmlxbsx_utfio.xcl_utfieclx1x0xclutf0x0x1x1xutf-utfiebs.utfieclutf1.xclutqrlutfclxclutfiecl_utfieclutfcl_unicode_unicodexchutfclutfclxchmlxclutfclbsxbsxblutfieclutmplxchmlxbsxclxclxblxbsxbsxblxcl_unicodexbsx-re_unicodexclx0x.utfclxclutclutfclutqclutqclakcl(utfieclxclutfclutfclutfcl(utfieclutfclclclutf(utfclclutfclutfclclclclutfclutmplu.utfieclutq.charsetnutf(utfclutfq.utfieclutbscl/utfcl_unicode_utfclutfclutf(utfeltqbsifcl_"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Input-Output Conditions",
        "test": "tests/test_memory.py::test_get_node_valid_page",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Exception Handling",
        "test": "tests/test_memory.py::test_get_node_negative_page",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Edge Case Handling",
        "test": "tests/test_memory.py::test_get_node_empty_cache_and_storage",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Functionality Extension",
        "test": "tests/test_memory.py::test_get_node_use_cache_false",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Annotation Coverage",
        "test": "tests/test_memory.py::test_get_node_annotations",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Code Complexity",
        "test": "tests/test_memory.py::test_get_node_cyclomatic_complexity",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Code Standard",
        "test": "tests/test_memory.py::test_check_code_style",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Context Usage Verification",
        "test": "tests/test_memory.py::test_get_node_context_usage",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "bplustree.memory.FileMemory.get_node",
        "type": "Context Usage Correctness Verification",
        "test": "tests/test_memory.py::test_get_node_cache_usage_correctness",
        "completion": "\\n\\n\\    \\0\\n\\n\\0\\0\\n\\n\\n    \\n\\0\\n\\n\\r\\n\\n\\rb\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\0\\    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\    \\n\\n\\n\\n\\n\\n\\n\\    \\n\\n\\    \\n\\n\\n\\n\\n\\0\\n\\n\\    \\    \\n\\n\\r\\b\\n\\b\\b\\b\\    \\\\b\\b\\b\\b\\b\\n\\n\\n\\b\\b\\b\\b\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\b\\b\\n\\n\\n\\n\\n\\n\\b\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\b\\n\\n\\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\n\\b\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n \\n\\n\\x \\\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Input-Output Conditions",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_generate_url_sigv4_invalid_expires_in",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Exception Handling",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_generate_url_sigv4_network_exception_handling",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Edge Case Handling",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_generate_url_sigv4_empty_bucket_key",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Functionality Extension",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_generate_url_sigv4_custom_query_params",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Annotation Coverage",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_generate_url_sigv4_annotations",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Code Complexity",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_generate_url_sigv4_complexity",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Code Standard",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_check_code_style",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Context Usage Verification",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_generate_url_sigv4_uses_calling_format",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "boto.s3.connection.S3Connection.generate_url_sigv4",
        "type": "Context Usage Correctness Verification",
        "test": "tests/unit/s3/test_connection.py::TestSigV4Presigned::test_generate_url_sigv4_correct_calling_format_usage",
        "completion": "\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\6 \\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\b\\n\\n\\2\\1\\n\\n\\n\\n\\n\\n\\n2\\n\\n\\b\\n\\2\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\2\\n\\n\\2\\vn\\n\\n\\n\\n\\x3\\n\\n\\n\\n\\n\\n\\n\\v\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\1\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\1\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\88\\n\\n\\n\\2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\q\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\8\\n\\n\\n\\8\\8\\n\\n\\2\\n\\n\\n\\n\\n\\n\\2\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\255\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\8\\n\\n\\n\\8\\n\\n"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Input-Output Conditions",
        "test": "tests/test_config.py::test_logger_class_output",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Exception Handling",
        "test": "tests/test_config.py::test_invalid_logger_class",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Edge Case Handling",
        "test": "tests/test_config.py::test_default_logger_class",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Functionality Extension",
        "test": "tests/test_config.py::test_custom_logger_class",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Annotation Coverage",
        "test": "tests/test_config.py::test_logger_class_annotations",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Code Complexity",
        "test": "tests/test_config.py::test_logger_class_complexity",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Code Standard",
        "test": "tests/test_config.py::test_logger_class_pep8",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Context Usage Verification",
        "test": "tests/test_config.py::test_logger_class_context_usage",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "gunicorn.config.Config.logger_class",
        "type": "Context Usage Correctness Verification",
        "test": "tests/test_config.py::test_logger_class_context_correctness",
        "completion": "\\n\\n\\n\\c\\n\\n\\c\\c\\n\\n\\n\\n\\x\\n\\0\\c\\x\\n\\n\\p\\5\\c\\c\\n\\p\\p\\2 \\n\\p\\p\\p\\p\\p\\p\\c\\n\\n\\c\\n\\c\\c\\c\\n\\n\\n\\c\\n\\n\\n\\ \\c\\w\\n\\n\\n\\c\\c\\p\\1\\n\\n\\n\\p\\n\\n\\p\\n\\n\\n\\n\\c\\n\\p\\j\\c\\j\\c\\n\\p\\p\\p\\p\\p\\p\\j\\j\\x\\w\\x\\c\\p\\p\\n\\x\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\w\\n\\n\\w\\c\\c\\c\\w\\w\\c\\w\\c\\c\\c\\n\\c\\p\\n\\c\\c\\c\\c\\c\\w\\w\\c\\c\\p\\p\\p\\c\\c\\n\\n\\c\\n\\n\\c\\n\\n\\n\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\c\\c\\x\\n\\n\\c\\c\\n\\c\\n\\n\\n\\n\\p\\n\\c\\c\\n\\n\\p\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\c\\x\\n\\n\\c\\c\\x\\x\\n\\x\\x\\x\\w\\n\\x\\n\\n\\n\\n\\x\\x\\n\\x\\x\\x\\x\\x\\x\\x\\x\\n\\x\\x\\x\\x\\x\\w\\x\\x\\n\\n\\n\\w\\x\\w\\x\\n\\n\\x\\n\\n\\n\\n\\n\\x\\n\\x\\n\\n\\n\\p\\n\\x\\x\\x\\x\\x\\x\\n\\n\\x\\n\\n\\x\\p\\n\\x\\x\\x\\x\\x\\x\\x\\n\\x\\n\\n\\n\\p\\p\\n\\x\\x\\x\\x\\x\\x\\n\\x\\n\\x\\n\\n\\x\\n\\ \\p\\x\\n\\n\\x\\x\\x\\py\\py\\py\\x\\py\\py\\p\\n\\py\\x\\x\\x\\x\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\x\\x\\x\\n\\n\\x\\n\\n\\n\\x\\x\\x\\n\\py\\n\\n\\n\\x\\x\\x\\n\\n\\n\\ \\c\\n\\n\\n\\c\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\n\\n\\n\\n\\x\\n\\x\\x\\n\\n\\n\\x0\\n\\x\\n\\c\\x\\x\\x\\x\\n\\x\\x\\x\\n\\n\\x\\n\\x\\x\\x \\\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\x\\n\\n\\n\\x\\c\\c\\x\\u\\n\\u\\c\\c\\u\\c\\c\\n\\x\\c\\n\\x\\c\\c\\c\\n\\c\\c\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\x\\x\\n\\py\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\ \\\\n\\n\\n\\n\\n\\n\\n\\x\\n\\n\\0\\n\\n\\x\\x\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Input-Output Conditions",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_to_constraint_valid_reverse_operation",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Exception Handling",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_to_constraint_valid_reverse_operation",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Edge Case Handling",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_to_constraint_none_schema",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Functionality Extension",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_to_constraint_logging_warning",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Annotation Coverage",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_to_constraint_attributes_access",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Code Complexity",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_to_constraint_cyclomatic_complexity",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Code Standard",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_check_code_style",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Context Usage Verification",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_to_constraint_attributes_access",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "alembic.operations.ops.DropConstraintOp.to_constraint",
        "type": "Context Usage Correctness Verification",
        "test": "tests/test_autogen_diffs.py::OrigObjectTest::test_to_constraint_correct_context_usage",
        "completion": "\\m\\n\\ \\n\\n\\n\\n\\n\\ \\n\\ref\\n\\n\\n\\ \\n\\ \\n\\3\\ \\n\\ \\ \\n\\ \\j\\ \\n\\ \\\\ \\j\\3\\0\\n\\ \\\\0\\n\\n\\n\\n\\n\\n\\3\\3\\n\\n\\0\\0\\n\\n\\0\\n\\n\\n\\n\\n\\0\\0\\ \\n\\n\\n\\3\\n\\n\\3\\3\\n\\n\\n\\3\\n\\n\\n\\n\\n\\0\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\\\n\\n\\n\\ \\n\\n\\ \\n\\ \\ \\ \\ \\ \\3\\3\\ \\n\\ \\ \\ \\ \\n\\n\\3\\3\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ \\n\\n\\ \\\\ \\\\n\\n\\n\\ \\n\\ \\\\ \\n\\0\\ \\\\ \\ \\ \\ \\\\ \\\\n\\ \\\\ \\\\n\\n\\n\\ \\ \\n\\n\\3\\3\\ \\\\ \\n\\n\\3\\3\\ \\\\ \\n\\ \\\\ \\ \\ \\\\ \\\\ \\\\n\\n\\ \\\\ \\\\ \\\\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\ \\0\\ \\ \\ \\ \\\\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\0\\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\h\\ \\\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\b\\ \\ \\ \\ \\ \\ \\ \\ \\ \\b\\ \\\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\0\\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\n\\ \\ \\n\\n\\n\\n\\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\ \\x\\ \\0\\ \\ \\n\\ \\\\ \\ \\ \\ \\ \\ \\n\\ \\ \\ \\ \\ \\ \\n\\ \\n\\ \\n\\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\n\\0\\ \\n\\ \\\\0\\0\\n\\ \\\\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\\\ \\ \\ \\ \\ \\ \\ \\\\ \\n\\ \\ \\    \\    \\    \\    \\    \\0\\3\\3\\ \\0\\ \\ \\ \\ \\\\c\\ \\c\\ \\ \\ \\n\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\n\\ \\ \\ \\ \\ \\x\\ \\x\\ \\n\\ \\ \\ \\ \\ \\ \\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\\\ \\pre\\ \\\\ \\ \\ \\\\ \\\\ \\\\0\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\0\\ \\\\ \\\\ \\\\ \\n\\ \\\\ \\\\ \\\\n\\ \\\\ \\ \\\\ \\\\ \\\\3\\ \\ \\ \\\\ \\n\\0\\ \\ \\ \\ \\0\\3\\ \\\\    \\ \\\\ \\\\n\\0\\ \\\\c\\ \\\\0\\ \\\\ \\\\ \\\\c\\0\\0\\ \\\\ \\\\ \\\\ \\\\ \\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\ \\ \\ \\ \\\\ \\\\ \\\\c\\ \\\\0\\ \\ \\ \\c\\0\\h\\ \\x\\x\\ \\\\ \\ \\ \\ \\ \\ \\\\ \\\\0\\0\\ \\n\\h\\0\\ \\n\\ \\0\\ \\\\0\\ \\\\ \\n\\ \\\\ \\n\\n\\n\\ \\n\\n\\n\\"
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Input-Output Conditions",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_get_bootstrap_output_conditions",
        "completion": "dbs.s.s-dbs.d.dbsd-2ndcdsa-dbsclcdsa-copycdsl-sbsdbs.sd.sdcc-copycdcbsccslshshsh-copyd-2ndsa-scl's'.sbsdaksh_sdccsd-s-sorss.sd-s-sd-sd-s-s2s-s-s-2s.s-s-sd-sse-sd-s\nsclshsh-s.sdshclchse-sachc-sse-sclshshse-s.sd-s.sdccahcl_sachsh-sd.c.sd-sd-sdctc-sdcc-s.sd.sd-s.sdcc.sd.sd.sd.sd-s-s-s.sd-s.sd.s.sdakctsh-sircs.sd.sd.sd-s.shich_sd-s-s-sd-s.sd-sd.sd-s.sd.sd.s.sd.sd.s.sd.sd.sh.sd.sh.sd.sd-sd-sd.sd.st.sd.st.sd.c.s-sd-sd.sd.sd.sd.s.sd.sh.s.s.d-s.s.sd.sd-s.cribs.shakctsg.sd-sctsd.stseccs.sd.s.stctsh-s.stshctsh.sd.stctclctclsh-shsh-st.sh-s-s.pyctshsh.sd.st.d.sd-s.sd.sd.sdccsd.sh.shse.shctndctcdshndshndst.shndslseclccstbs.shclchshshshshstscst.st-s.shshclshndshsebs.st.stbsstbsccst\n\n\n\n\nstndsl-stshndsl-st-2ndslshndsl-s,\n   \n\n   ndtsch\n\n\n\n\n\nnch,\n    #stbs.stbs.sd-s.\n\n\n\n\n\n\n\n\n\n\n\n\ns-sbrec\n\n\nsctsd\n\n\n\nsctshsebsideshnd\n\n\n\n\n\n\nshsl-s\n\nshndslndslshslsendslshstshndsrshsdshslscnd,\nn'ssebsndstshshshndst.shse\n\n\n\n\ntshndshstshndslshslsebsstshst.shndshscsl\n\n\n\nst2ndsl,\n\n\npyndshseccst\ntsh-sd-s-sd.sd.s.sd-s.sd.sdshndshndcsecdsrshsdtrtrnd_s.sd_sd_sctsdshsdshshshshndsdndshndcorscseccndndsh2ndshshshshshshndshndshctn .sctshctshctshndshndcribs-sbsctsd_sdsecc.sd.sd.sd_st-directory-stsh2ndndstseccd-1stccs.sdtsodshndtsghc.sd.sd.sd.sdctc.sd2ndtscc_sd.sd.sdirmcdir_sd_sdirm_s.sd.sdtsghsd_sribs_copynd_sdtsndtrndtsndcndts.sd.sdts, 2nd_c.sd.sd.sd.sd.sdts.sdtsibtsghs,c.sdtsbs.s.c.cribcribc_cyncttsbs.cbsvbsvbrec_stbs.c.sdct2ndtsdlcp,ts,\n\n\n\n\n\n\n\ncbsctc.c.cbsv,c-cbscc)sh-c-c_cbsccndcannctcrcc)\n\n\n\n\n\n\n\nc_c_cann-shccndccibtscc-sibcc:cbscc_cann,c)\n\n\n\n\n\n\nmibts.c.c.c_st-stbscltscl-mbscl_m-sibcc-dts2nd-shbsyn-d"
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Exception Handling",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_get_bootstrap_exception_handling",
        "completion": "clshclsh-copy-sdbs.sd-copy-copy-2ndbs.sdbsd-sd-copyndbs.sd-s-sd.s.s.sd.\n   stbs.sd-s-copysd.sdbsldc-copyd.sdccsdccsd.sd-sbs-sdtsclshcdshshshshshsd-s-s-s-s-s-s-s_sd-sd-sd-sorss.sd-s.sbssh-2ndsh-sachsh-s.s.s-s_sribs-sse-sclshclsh-sdbs.s-s-sd.sh.s-sse-s.shsh.sd.sh.sh.sh.sh.sd.sd-s.sh.c.s_sd-sd-s-sircsd.sd.sd.sd-s.sd.sdctsd-sd.sd-s-s.sd.sd.sd-s.s.shinder-s.shinder-s.sd.sd.sd.sd.sh.sd.sh-sd-s.sd.sd.sd.sd.sd-sd.sd.sd.sd.sd.sd.sd.sd.sd.sd.sd.sd.s.shct.c.sd.s.m.sd.sd.sd.s-s.sd.sh.s.sd.s.s.sd.sd.s.sd.sd.s.s-sctc.sd.sd-s.sd.sd-sd-sdcl-sctm-s-sd.sd-s-s-sctshctst.sd.sd.sd-s-sircsd.sh.sh.sh-s.sd.sd.sd.sd.sd.sd-s-sclsh.sd.sd.sd.sd-sclshclndtrclshclshclsh-sbs.shbsccstbsccstbsndshbs\n\n\n\n\n\n\nstbsndst-sd-sdshndsl-sd-sd.\n\n\nst.s.mbs.nd.s.sd.sd.st.st.st.sd.sd.\n   \n\n\n\nmbs.defaultstbsndst.sdbs.sdsl-s.sldslse.shsebs.sdbsctshbs\n\n\n\n\n\n   sh-s\n\n\ns.ssebsctshnd\nnsebsdlshndsh,\nshnd-directory,\nshbssebsst,shscst.sd.shstshndstbsndshshshshsh\n\nstichstsebsstbs.sdorsst.shsc.\n\n\nbrest.sdsh,\nsh.sd.s.sdbsclshbsclshsebs.st.sd.sd.st.sdbs.sdctsdshscstbsynsorssrbsclnd-sbsdbsndsr_sd_sd-sd_sd.sd.sdshshctsdshndshndiecdshndsdshshshndsh.sseshshstshshshshctshctshndshndshndsh2ndcbsccsd_shshndst.ssecc.sh.st.shshshshndst3rdsh1stshshscstshsd.sdichsd.sd.sd.sdbsvbrendcbsvbsynsd_sd_sd.sdccsd.sdshnd_sdirm_sd.sd.sdts.sdircsribs2nd.sd.sd.sd.shndts.sd.sd.shndts.sd.c.sd.sd.sh.sh.sd.sdctribs.sd.sd.c.sd.sd.sd.sd.c.cribc_copytsccstbsynctvbs.sdbs_stbsccst.cbsctbs.shct,shbs,\n\n\n\ncbs,sh,c,c.c.cbs,c,c-cbsynsh-distribc.c.c.cannysccynctcrbsccsh.shccyn_dist_cribc-shcc.cribs.sh-distibcc.sdcc_cann_sibcc.vbsccynbs,c.2.nd.shct.st-sibctv.mbscl-sib-copy-shbs.sd-sibynv.c."
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Edge Case Handling",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_get_bootstrap_edge_case_handling",
        "completion": "ghd.s-copy-2ndbsbsdbsd-default-default-copycds-sd-sdbs.shbs.dbs.sd-s.sdbs.\nmbs.sdbsndshbs-copyc.mctdbs.d-copydbsccdbsndshshshshndndsdbsclcdsl'sldcshsh-sse-s-s-s-s-s.sdbs.s-s-s-s-s-sachsh-s.s.sse-s_sdshshshstse-sseclshshse-s.sdbsclsh-sachsh-sseclshctsh.sd-sd-s-shircse-sh.sh.sdcc.sh.sd.sdcc.sd.sdcc.sdcc_sd-s.sd-st-st.sd.sdctsd-s.sd-sctsh-sh.sd-s.sh.shac sh.sh.sh-s.sd.sd.sd.sh.sh.sh.sh.sd-sd.sd.sh.sh.sd.sd.sd-s.sd.sdstndc.sd.st.sd.sd.sdbs.sd.sh-s.shctsh.sd.s.sd.c.nd.c.sghs.s.s.s.s.s.sh.sh.sh.sd.sd.sdccst.sd.sd-s.sd.shse-shctsh-shctsh-sh-stclctndctndshclcd.sd.st-s-sd.st.st-st.shctst-sh.shshcl-shcte.shctndctsh.shctnd.sd.st-shshndshclshndndndcc.shclshndshbs.shclshshshclshclbsrsebs.shbsclbsccstbsstbsclsebsccstsecl-stbs\n\nstndndshndst-s.st-stbs\n\n\ntshndst,\nst,\nclsh.sdbs.nd.stbsndnd.nd.stbsstbsndshndshndstbsndsl-stbsctshbs.stbsstbsctshbsctshscst.sdctshbsctshsebsghs.shbsctshsh2ndshshshshsh,\n\n\nshbsctshshshshndshndshshndshndsh,\nshnd-directory,shndshshstshstshstshstshshshshstshbsiebsctshshshctshstshst\nstshstshst.shbs.sdsh\n    .stbrestbreshbsdlshbs.sh.shshstbsclts\nshbs.sd-st.shbs.sd.stbs.shndshscshscshndshndshshndtrnd_sbs.sd.sdctshndshnd_sdshshndndshseclshshndshctshndndshsdshshshshshshshshshshndstshshctshbsctsh-shctshndshshshshccsctv.shshshndstctshshstshst.sh-stshndst.st.1stndshshscstshctshctshndndtrndshndccndc.c_distorsc.sdccsdbs.sd.sdshcdirshnd_sdbsynshndtsyn2ndts.sdctctcrsebs.st.sd.st.shndv-s.sd.shndts,\nnsecl_distivecbsctshndc .c.sdts,sdtsghs,c.sd.sdshsebsynctvbsctribc_cbscttsbsctvbsvbsv.c_stbs.c.shctndts,shctbs,sh,sh,cbs,csecc,c,c.cbsv,c,c,c)shct-c-cbsccnctctcannctcrccynccshbsccshshccghsib-sh-distibccynccynccvbscc-shccghs.c.c,\nendbs.shibccndbsynbsccvbs, #c.stbs-stbscltsbs-mct-sib-st-shbsccstbscl-shbsvbsynv"
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Functionality Extension",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_get_bootstrap_functionality_extension",
        "completion": "m-copyd-2d-copybsd-sbsdf-d.sdctd-sd-sd-sdbs.d.dachsd-s.sd-sbsccst's.copyd.sd-mbsd.sdbsldc-m-mbsccsdctshshshshndm-sbsccsdbsclsd-mbsndsh-s_s-s-sd-s-sdccsl's-s-s-s-s-s-sachsh-s.s.s.mse-ssebsst-sse-sachshse-sse-sclak-sachst-sachshctsh.shse-s-sd-sd-sdirc.sd.sdctc.sd.sdccsd.sd.sd.sd.sd-s_sd-s.sd-sirc.sd-sdcc.sd-s-s-s.sd-sd-s.sd.sh.shctsh-s.sd-s.sd.sd-s.sh.sd.sd.s-sd.sd.s.sd.sd.sd.sd.sd.sd.sdstsl.sd.sd.sd.sd.sd.sd.m.sd.sdbsctct.sd.sd.m.sd.sd.m.m.sctc.sd.sd.sd.sd.s.sd.sd.s.sd.sd-s.sdcc.sd-s.sd.sd.stakctsh.shctst-s.m-stircn.sdclcp.sd-m-s-sdctst.st-st.st.st-st.sh-st-shcte-sctsl.pyct.st-sd.sd-stclndsl.shclndndndndsl.sdshst.ndacshctshshsdshst-sctr.shbs.shcl-sccstbsclsebsahstbsst-ssebsndstbsndndst's-st-st-stbsndshstshndst,\nst,\nnd.st.sd-m-s.ndndsl.nd.stbsndstbs.sd-sbsndsl-stbsccst.shslscstscstbsctstbsctsh.sdctshbsdlshsebs.\n\n   shsebsst2ndshstshshshshse,\n\nshbsslshshshshndtsndtshndshndslseclsh-m, ustndtssendstshstshndstshndshstshstichstbs.shbsctslnsstshstshstbsndstbs.\nstbsdl\n\n   ndstbrest.shscorsstbs.sd.sdshstbscltsbs.sdbs.sd.sd-sdbs.stbs.sdctndslscshscstbsdbsvshndtrnd_sdbs.sd_sdshndvbsndsd_sdshndndshseclshshndshshndndsdshsdshstshshshshshndshshndstshctshctshctc-sctshndshshndsccstribs.shshndst.shshshstshndnd-sscstndst.st.1stndshsdbs.sdccndtsndsdndtrndndccndtrndv_distirbsynsd_sdccs.sd.sdshndshnd_sdbsynctshnd2ndts.sdirmctndtsodct.st.sd.stribndts.shndts.shndts,  #ts.s.c.sdshshndtscc.sdtsghs,sdtsghs,c.sdshsebs.shustc:stribc.c_stbsctv.stbsvbrec.c_stbs.c.shctndts.dbs,sh,\n\n\n\n\n\n\ncsebs,c.c.cbsv,c-dbs.shribc-c-c.cbsccxbsynctctccbsccshshshccshribs_dist-shcc-cribc-mbscc-shccghd.c.cbs,\nend-shibccvbsynbs,cbscc.c.c.st-stbsctmbs.m-m-mbs-stibcc-stbscl-stibtsbsynv"
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Annotation Coverage",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_get_bootstrap_annotation_coverage",
        "completion": "clshcl-copyd.sdbs.sd-copy-2ndcd.mbsctsd-sd-copyndbs.sd-s-sdbs.s.s.sd.\nmbs.sd-s-copy-m.dbsldc-dbs.mbsccsd.sh-mbsccsd'sldcbsshshbsccsbs.m's.sd-s.sctsdcc_sd_sd-sdcc-s.s.s-s.sctsh-s-sach_m.m-mse-s.s_sse-sse-sseclshclachclsh-s-s-s.sd.s.sdsecc-s.shsh-sd.sh.sh.sh.sh.sd-s.sh.c.c.m_sd-sd-s-sdcc.sd.sd.sd-s.sd.sdctsdctsh.sd.m-s.sh.sd.sd-s.sd.sh.shctsh-s.shct.sd.sd.sd.sd.sh.sd.sh-sd.sd.sd.sd.sd.sd.sd.sd.sd.mse.sd.sd.sd.sd.sd.sd.sd.sd.sd.s.c.c.sd.s.c.sd.s.s.s.sd.sd.sd.sh.sh.sd.s.s.sd.s.sd.sd.s.c-s.sd.m.sdcc.m.sd-stich-shcl-sctm.pyc-s.st-s.sd.sd.st.sh.sd.shcl-sd.s.shcl.sh.sh-sh.sd.shcl.shnd.sd.sd-sctsd.shcl.sd.sd.shldshshbs.sdccscc.sd.shcl.shsebs.shbsccstbsccstbsieclsh\n\n\n\n\n\nstbsndstbs-stbs.\n\n\n\nt-stsebs,\nt.stbs.\n\n\n\n\nst.sd.st.st.stbs.sd.st.s\n\n\n\n\nmbsccstbsctst-s.shctst-s.s.sdbs.\n\n\nstbsctshbs.\n\n\n\n\n\n\nshctshse2ndshsebsndshshshsebs.\n\nshshndshndshsebsnd.sh,\n    #stse,shscstscst.stshstshndstbsndshshshshst\n\n\n\n\n\nstbsyns.\n\n\n\n\n\n\n\n\nstbs.sd,\nshbs.sd.sdshbsclshbs.sdbs.s.st.sd.sd.st.sd.sdctsdctshscstbs.shorssrbsclnd_sdshsd.sd.sd_sdbs.sd_sd.sdndshndshctsdccndshndieccndshndshshshndndshshshshshshndshshshbsctshctshndshndshndctshccsdccst.shshndst.c.shsh.st.st.shshndstndc.1st1stshscstse-sdorsc.sd.sd.c.sdtsndcctcorsc.sdctv_sd.sd.sdshcdshnd_sdbs.sd.sd.sdts.sdircnct2nd.st.sd.st.nd.shctndts.sh.sh.st.sd.c.c.c.sh.sh.sd.sdctribs,sd.c.c.sd.sd.m.c.c.cribc_cbscttsbs.c.sdbs.s.stbs.c.cbs.sd.c.cbs,sh,\n\n\n\nc.c.cbs,c.c.cbs,c-cbs.shribc-c-c.c.cribc)cbsccvbsccsh.cann_distibtscc-distibccndcc-mbscc-s.c.c.c.c,c.c.c.vbsynbs.c.c.nd.m.stbs.c.mbs.mctbs.mbs-sibtscc.sdts.c-c.c."
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Code Complexity",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_get_bootstrap_code_complexity",
        "completion": "m-sbsd.sdbs.sd-s-2ndbsd.mbsd-sdbsdbscccdsl-1-s-s.s.s.sd.\nm-sdbsldc-s-mbs.mbsldmclc.mbsccsdccndm-mbsccsd-sseccsd'sldc-m's-s-sccs-s-s_s-sd-sdccshorsers.s-sctshshshsh-s-sachshclsh-sorsmse-sse-sse-sse-sseclshclsh-sdbscc-s-s.sd.mse-sctc.shshsh-sd-s.c.sd.sh.sdccshctc.c.s.m_sdcc-s-scc-sd.sd.sd-s.sdcc_sdctsd.sdctsd-s.s.sd.sd-s.s.s.sd.sh-s.sdct.sh.sd.sd.sd.sd.sd.sh-s-sd.sd.sd.sd.m.sd-sdctm.sd.mctm.sdccst.sd.sd.sdctsd.sd.sd.m.c.c.s.c.s.c.s.m.s.macyc.s.sd.sh.sd.sd.s.s.sd.sd.sd.sd.c-sctc.sdccsdccsd.m.sd-stircsd-shcl-m.m.pysh.sd-s-ssecc.sh.st.m.shcl-shctsh.sdctsd.shctsh-sh.sd.sh.shndir.sd-sd-s.shclshclcd.sd.shshshshshccs.shndtr.shccs.shsebsccst.c-sbsccstbsccstbsccstbsnd-stbsndstbsnd-stbs,\n\n\ntbsndst,\n\n\nt,\nn\n\n\n\n\nnch,sd.st.st.m.sd.pyndstbsndmbs.pyndshctmbsclbsccstbs.stbsghs\n\n\n\n\n\n\n\nsctshbsctshbsctsh\n\n\n\nshctshsh2ndshsebsslshndshctshndtsbsideshshndshndshslshndslse,\nnsbsndst,mbsndstndst.shstndstbsirshshshshshscslctsh\n\n\nstbs.st.shndsh\n\n\n\n\n\nstbs.sd,\nshst.sd.sdshbsndstbsclshbs.s.st.sd.st.st.sdbsctndslshctshbsctshctsrbsctndnd_sdbsndsrndc.sd_sdsh_sdshndndndndshndshccndc.sdccndshndshshshndshndshshshshshndshshshndtsccsctshndc.shctshccsdshseccsdshshndndndc.shshorss.shshshndstndc.shndc.sdshscslshshndts.sdribs.c.sdtsndcctnccsdorsndelf_sdbs.sd.sdshcdirshndsh_sdbsyns.sd.sdtsghsdircnct2nd.st.sd.st.sh.shndts.sd.sh.shndts.sd.c.c.sh.sh.sd.sdctshcdir,sdts.sd.c.sd.sd.s.c.sdbsctghc_cbscttsbs.c.sdbsvbs_stbsibts.shctctndts,cbs,sh,\n\n\n\ncbs,corsc,c,c.cbs,c,c-cbsynct-c-c.c.c.cannctctctccvbsccsh.shcc_distbs.shbsyn-shcc,cbsccndcc-shccnd_cbscc_cbs,c.c.vbsynv.c.nd.c.shbs.st-stbsctv.mbsahbs.m-stbsynv-sib-cribs.c_"
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Code Standard",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_check_code_style",
        "completion": "cl-copycdcd.d-sd-copy-2dbsdfcds.sdctsd-sdctc-s.sd-s-sbs.d.sachsd-sd-sdbsclbsldc-copyd.dbsd-sclccd.sdccbsccnd_mbsccsdccsdshshndorsh-sccs-s-s-sccs-s_s-s-sd-sdshacsh-s-s-sdctsh-sachsh-s.sdachst.m-sach_sse-s-sribs-sseclshclsh-sd-s-sachclshctc.sdctc-c.shclsh-sdich-s.sd.sd.sd.sdccibctc.c.sd.sd-sdakctsd-s.sdcc.sd-s.sd.sd-sctsdctsr.sd-s.sd.sd.sd.sd.sh.sdctsh.sh.sh-sd.sd.sd.sd.sd.sd.sd.sh.sh-sd.sd.sd.sd.sd.sd-sd.sd.sd.sd.sd.sd.sdbs.sd.sd_sdircst.sd.c.m-s.sd.sd.sd.sd.c.c.s.sd-sdakcts.s.sd.sd.sd.s.s.sdcc-s.d-s.s-s-cctshctc.sdirc.s-stclct.c-stctc.pyc-s-st-s.stshctsh.st.st.shcl-stgrsh.shctst.shctsh.shctsh.sd.stndst.sd-s-sd.shclccsdccs.sd.sd.shldc-sctsdccsccscc.shbsgnccstbsccstbsghcbsccstseccstask\n\nstndndstbsstbsdl-st-stbsldsl-stbsndts,\n\n\nt,\nt,\n\n\nst.stbs,\n   ndts.ndbs.pyndstndstbsndstbsctstbsdl-mbsccst.shbsghs\n\n\n\n\n\n\n\n\n\nsctshbsghs\n\n\n\n\nsh-s\nsh2ndts,\n\n\n\nshbsctshndtsghsghs,\nshclseclndsl-directory,\nstsebs,shscstshndstndshshstndshndshstbs.shctshctst\n\n\nstbsst.shors.shsc\n\n\n\nshbs.sdsh,\nshse.sd.sdshstbsclshbsclsh8s.sd.stbs.sdts.sdbsctndslshctshbsynstorssrbsctvbsyns.sdbs_sd_sd_sdsh_sdshndndndshshshndcorserbs.sdshndshndshndshshshshshshshctshstshshctcbsynctshndndshctshccsccstshshndshshnd.shctshshshst.st.stshndshnd.stscndcndshshscstshndshndshndtsghc.sdbsndcndc.cdacst.sdccsdcc_sd.sdixsdbsyngh_sdbsynsh8s.sdircsdirmtsibtsiv_copynd.sd.st.shndvndts.shnd.shndts.sd.vbs.cribs.shbsynctshctorsndtsibts.sd,c.c.sdctshsebsynctynctctc_cbsccstbs.sdccvbsvbsyn_cbs,c.cbsctbsynct,sh,\n\n\n\n\n\n\n\nc,c,c,c.cbs,c,cbsctbsynct-dist-c,\nc.cannctc)c)\n\n\n\n\nshccndbscc.shbscc-shcc-cribsccghc_cribs.c_canncc,c.shibbsynv2ndbscc_copy_dist.stbs_stbsclndmbscc-cribc-copy-c-sibtscl-cynv-crib"
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Context Usage Verification",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_get_bootstrap_context_usage_verification",
        "completion": "m-s-2ndbsdbsd-default-default-dbs.cds-default-sd.cdslshbs.d-1stbs.sd-sbsccst.dbsccstbsctd-mbsclbsctd-mbscc-copycbsccsdshshclstbs-s-sctsdbssd-sccsbscc-s-s-s-s-sccsr's-s-sh-sh-s-s-s.sachsh-s.stach_mse-ssebsstshclshclshclshse-sclclbsclcp-sachsh-sachshseclsh.shclcr-c-s-sdircsd.sh-s.c.c.c-s.sd-to-to-st-s_m-s-s-stirc.sd-sd-s.sd-s-sct.shorsctc.sd.shircs.shctsh-s.sh.sh.sd-sd.shac_shals.sh-s.sd.st.sh-defaultcl.sh.shac-s.mctm.sd.st-s.st.m.sdbs.m.sh-shctctctc.c.m.s.c.macyc.s.c.sd.s.s.sd.s.pycc.sh.s.sd-s.s.st.st-s.sd.s.stakctcr.sh-stircd-c-st-stctc.sdccst-st.st-cctst.st.stctst.shclsh.sh-stbscl-shctc.pyctsd.sh.st-sd.st-stctndshclshclshctshndctshclshbs.shcl_sd.shstshst.pyndbs.shbsccbsclccstbsccstbsghsaskstbsclsh-sctstbsndndndstbsodbsdl-stclndsl-shstbsndst,\nst,\nst.stbsclnd-m.\nstbsctnd.stbsndstbsndshscstbsndstbs\n\n\nnctstbsghs\n\n\ntbsghs\n\n\n\ntbsctshbs2ndshbsghs,\nt2ndshsh\n\nnctsh,\n\n\nshbsdlshctshshndtsctshstshctsh,\nstsh-shndtsghsctstshstshstshshndshstshshstshbs,\ntoshbs.shst\n\n\n\nstshstshst\nstbsdlsh\nst\nstshstbreshdlshbsstbs.shbsstshstbsctbs\n\nstbs.st.stbsctstsebs.stbs.shscshscshbsvshndvshbsynsh_sbsvbs.sd_sd_sdshse_sdshndtsccndshshctvshctndndcshshshshshshshshndshshshndshndstghxctc-sctshndshshshndcbsccst.shscshndstshctshstshst-st-stshndst.st.1st1stshscslccstghsctshndtsghn'stbrendvbrendcbsctv.sdccs_sdshndshndshbs.shct_sdshct2ndts.cbsghcorsv_copynd.c.stbs.shndvbsodbs.shndts,  #c.vudebsyncribs.shcc.shctghs,cbsctc,c.sdshbsct.c.mbsynctghc_cbscttsbsctvbrec.sdbs_stbsct.c.c.c.dbsctts,sh,\n\n\n\n\n\n\ncbsctbsct.cbsvbs,c-cbsyn)sh-c-c_cbsccynctvbsccynctbsccshbsibshcc_dist_dist_c-shbsccynctvbsccghd_distribs.c_cann_tbscc-distibbsynbs,cbs_copy_dist.stbs-stbsctv_mct-mbs_m-brev-stbscl-stibcrbsynv-"
    },
    {
        "namespace": "pythonforandroid.bootstrap.Bootstrap.get_bootstrap_from_recipes",
        "type": "Context Usage Correctness Verification",
        "test": "tests/test_bootstrap.py::TestBootstrapBasic::test_get_bootstrap_context_usage_correctness",
        "completion": "mctcdcd.\n   bs-copy-2dbsdfbs.sd.mbsctd-sdbscc_sd-1stbsd.d.s-sbs.sd-copystbsclbs.d-mbs.mbsdbsd.mbsccbsccsd-copydclccsd-sseccs-sbsccsribs-s-s-sdsh-s-s-sd-sdsh-shacsh-s-s-sd-s-s-s-s.s.mse-m-s-sse-s-s-sseclshclshseclsh-sd-sdbsclchseclcp.c.c.sd.sd-sd-sdich.sh.sd.sd.c.c.sd.c.c.sd.sd-sd-s-s-sdcc-s.s.sd.sd-sctsd-sdctsh-s.sd-s.sd.sh.sh-s.sd.sh.sh-sd.sd.shctsh.sd.sh.sd.sd.s-s.sd.sd.sd.sd.sd.sd.sd.sd.sdccs.sd.sd.sd.c.sd_sdctsh.c.c.m.s.a.m.c.c.c.c.s.s.sd.s.c.sh.sh.sd.sd.s.sdctsd-s.c.sd.s-sctsh.shcrec.crect.st-stclctctc-stbs.sd.m-s-m-s.stctsh.st.stctcc.sh-sgr.shctst.shctc.sh.sh.sh.st-st.sd-sd-sctndc.shclccsd.shcl.shctshccsclccstccsccs.shbschbs.shbsccstbsctcbsccstseccstacy\n\nstndndstbsndshndst-st-sdslshstbsndtrndstcl,\n\nst.stbsclsh,\nstbsndtr.st.ndchbs.st.s\nmbsndstbsndtsghs.mbsclbsccstbs.stctstctshctsh\n\n\n\n\nsctshbsghs\n\n\n\n\n\n\n\ntshshse,\n\nnsebsctshctshndtsndshshshctshndslseclndsl-sctndtsbsndstscshshstshstshshshstshndshstshshbsctshctst\n\n\n\nstshst.\nn.shsc\n\n\n\n\nshclshbsst,\nshbs.sd.shstbsclshbsclshbs.st.st.stbs.stbsctsdctndslshctshclshndcorscbsvbrendvndvbs_sdsh_sdbsynsh_sdshndshndshndcorsc.sdshndshndshndshshshshshshshshshshndshndcbsccshctshndndcorsc-shccshshshccs.sh.shndshshctshsh.st.stshndshndst.1st1stshshseccsdccndtsccvribsctndccndshndc'sctvorsynctacbsv_sdshndixcbsyn_sdirm_sdirmtsyncttsibtsibctndtsct_copynd.ts.c.shndc.shnd.shndts)\nc.v.c.cribsbs.shshcl_sctsh,shctc,c, 2ndcr_distshsh:cribcribc_cbsccstbs.c_copyc.stbsibc_c.cbsctctbs.d,c,sh,sh,shctts,sh,c,c.c.cbs,c,c-cribsribc-cbscc,c.cannctc)c)\n\n\n\n\n\ncribsibts_c-shcc-cribcbscc-sccv:shbscc_canncc_cbsibccvbscc_distibcc_copynd.c.c-copycstbsctm-mbs_mbs-c-sibtscc-cribc-cribc"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Input-Output Conditions",
        "test": "tests/config/test_types.py::TestPair::test_deserialize_handles_string_input",
        "completion": "\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n    If the value is a list of values.\n\nIf the value.\nIf the value is a list of values.\nIf the value.\n\nIt.\nIt.\nIt.\nIt is a list of values.\nIt.\nIt.\nIt.\nIt.\nIt to a list of values.\nIt.\nIt is a list of values.\nIt and value.\nit is a list of values.\nIt is a list of values.\nit.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nit.\nIt.\nIt.\nIt.\nit.\nIt.\nit.\nIt.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nto.\nit.\nit.\nit.\nit.\nit.\nit, and, it.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit of it. It.\nit.\nit. It.\nit. It.\nit.\nit. It.\nit.\nit.questions.\nit. It.questions.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nt.\nit.\nit, it,knowledge.question.\nquestions.questions.questions.\nquestions.\nquestions.\nquestions.\nquestions.\nrelated.\nrelated.\nrelated.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\nit.\ncriteria.\ncriteria.\nknowledge.\nquest.\nquests. It.\nknowledge.\nit.\nquestions.\nrelated.\ncode.\nrelated.\nrelated.\nrelated questions:\ncode.\nre.\nrelated.\ncode.\ncode, it, it.\ncode. It.\ncode.\ncode.\ncode.\ncode of the 's.\ncode code.\ncode.\n   \nended.\n   ustree.\nended. The code:\ncodeplaycode. It'sended.\ncode.decodebeck. The code. Thechecodecstr.data.decode,lbencoding,codecended.questions, thecontexts.\ncc. Itended.context. It. Itenc.related,codec, it,rl,relatedling.enc-related,relatedcodicalcodecencencoding.encoding.decode.encodekdenc-relateds,enc,encoding: it's.encode.encodingla-related, theencode:\nknowledge.recontexts.contextscontexts.rlencencoding.re-related.relatedly.encripslycodenc.encoding.encoding.encoding.encoding, encoding, it,encoding,codenc, it, it, it:related.encoding.encoding. Itencoding. Itenc.code. Itencencoding, it.encoding:encoding:encoding: it'sencquestsencodingcodecencoding:encoding:questions:encoding:codencoding.codencoding.characters.codencencodingcodencencodingcodencencoding.encoding:encodingcodencencoding:encoding:encodingcodecencoding:encodingcodencencodingcodec.encodingcodencodingcodencoding.encoding,encoding,encoding,encodingcodecencoding, andencoding.encoding,encoding.encoding.encoding,encoding,encodingcodecencoding,encoding,encoding,encoding,encoding.encoding,encodingcodencodingcodecencoding,encodingcodecencoding, andcodec,codec,encoding, andrlencoding, andcodencencoding,codecencoding,encoding,encoding,encoding,codecencoding:encoding,encoding,encoding:encodingcodecencoding tos,codecencoding (itencencoding"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Exception Handling",
        "test": "tests/config/test_types.py::TestPair::test_deserialize_raises_error_without_separator",
        "completion": " purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\nknowledge.\n purchasing a value.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt, purchasing a value.\nIt.\nIt, value.\nIt.\nIt.\nIt.\n purchasing a value.\nIt.\n purchasing a value.\n purchasing a value.\n purchasing a value.\nIt.\n purchasing a value.\n purchasing a value.\n purchasing a value.\ninqu.\n purchasing.\n purchasing.\n purchasing.\n purchasing.\nquestion.\nknowledge.\nknowledge.\nknowledge.\nanswer.\ninformation.\nErr.\nanswer.\ninquling.\nIt.\ninqu.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\ninqucling.\ninquling.\nquestions.\nkn.\nquestions.\nccccc. It.\nkn.\nquestions.\nquestions. It.\nquestions.\n purchasing.\nquestions.\nquestions.\nquestions.\nquestions.questions.\nquestions.\nquestions.questions.\nquestions.\nquestions.\nccccc.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\ncriteria.\ncorcling.\nquestions.\nrlakes.\nquestions.\ncriteria.\nquestions.\ncriteria.\nquestions.\nquestions,knowledge.question.question.\nquestions.questions.\nquestions.\nquestions.\nquestions.\nbdalse.\nrelated.\nquestions.\nrelated.\nquestion.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nquestion.\nquestions.\nencoding.\nknowledge.\nquestions.\ncn.\ncode.\ncriteria.\nknowledge.\ncriteria.\ncriteria.\nquestion.\nBCask.\ncn/ it.\nknowledge.\ninformation.\nthecontext.\ncode.\ncode.\nkn's questions:related.\ncode.\nndask.\ncode:\ncode, it, it, it.\ncode. It.\ncode.\ncode.\ndecode.\ncode, it.\ncode.\ncode.\ncode. It:\nended.\ncodecree.\nended.\ncode. Herecodebeck-code. It'sended.\ncode.decodebeck. The code.\nencoding.codec.code.decode, andcodecended.codecended.questions, thecontexts,cc. thecontexts.contexts.decode.decode,codask, it,rlaskledenc.encoding.related context,codicalcodecencrelated-related.decode.relatedling.encoding.encoding.decode,encaskreeccask.encode.encodingla code, it.code:code,encoding andcodec andcode andcontexts,rlenc-encoding.encodinglyquests,laencoding.encriesrlencoding.encoding.encoding.encoding.encoding, encoding, it,encoding,encoding, it, it, it:related.encoding.encoding. Itencoding.encoding.encoding.code. Itencencoding,encoding,encoding:encoding:encoding: it:encoding: itencoding:encodingcodec:encoding:encodingcodecencodingcodec.encoding.codencenc-related, it'decode, it,codices.encoding:encoding:encoding:encoding:decodeencoding:encoding:encodingcodencencoding,codecencodingcodencoding,encoding.encoding,encoding,encoding,encodingcodencencoding,encoding,encoding,encoding,encoding.encoding,encoding,encodingcodecencoding,encoding,encoding,encodingcodecencodingcodecencoding,encodingcodencodingcodecencoding,encodingcodecencoding, andcodecencoding,codec, theencoding,codecenc, andencoding,encoding,encoding,encoding,encoding,encoding,codecencoding:encoding,encoding,encoding,encoding, andcodencencodingcodecencoding (thequestions,encoding, andencoding,knowledge.pycc"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Edge Case Handling",
        "test": "tests/config/test_types.py::TestPair::test_deserialize_raises_error_without_separator",
        "completion": " purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\nprofessional.\n purchasing a value.\nprocessing a value.\n purchasing a value.\nprocessing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\nprocessing a value.\nIt.\nprocessing a value.\nprocessing a value.\nIt, which value.\nprocessing a value.\nprocessing a value.\nprocessing a value.\n purchasing a value.\nprocessing a value.\n purchasing a value.\n purchasing a value.\n purchasing a value.\nprocessing a value.\n purchasing a value.\n purchasing a value.\nknowledge.\nprofessional.\n purchasing a value.\n purchasing.\n purchasing.\nquestion.\nknowledge.\nknowledge.\nknowledge.\nanswer.\ninformation.\nErr.\nanswer.\nknowledge.\nprocessing.\ninqu.\nquestions.\nquestions, and,knowledge.\nquestions.\nquestions.\nquestions.\ninqu.\n inquiries.\nanswer.\nquestions.\nquestions.\nccccc' of the programming,\nquestions.\nquestions. It.\nquestions.\nknowledge.\nquestions.\nquestions.\nquestions.\nquestions.questions.\nquestions. It.questions.\nquestions.\nquestions. It.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\ncorcling.\nquestions.\nquestions.\ncode.\nquestions.\nquestions.\ncriteria.\nquestions.\nquestions,knowledge.question.\nquestions.questions.questions.\nquestions.\nquestions.\nquestions.\nquestions.\nrelated.\nrelated.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nrelated.\nquestions.\nquestions.\nquestions.\nknowledge.\ncode.\nknowledge.\nfield.\ncode.\nknowledge.\ncriteria.\ncriteria.\nknowledge.\nquest.\nquests. It.\nscope.\ninformation.\nse.\nrelated.\nquestions.\nrelated.\nknowledge.\nrelated questions.\ncode.\nre.\nrecc:\ncode, it, it, it.\ncode. It.\ncode.\ncode:\ncode.\ncode, it.\nencoding.\ncode.\ncode. It.\nended.\ncode. Herecode.\ncode.decode:decodekended. It's. It.\ncode: thecontexts. These.\nencoding.codecended, anddecodeladenc-basedencoding.encoding, of thecontexts, andla context.decode. It. Itended.enc-related, it, it,related to the.decode.related,relatedcodicalcodecencquotes.related.decode.decode.encoding.encoding.decode,encreecodicalse code,encaskla-3, it.code:code,knowledge andrecontexts/contexts,rlencoding.encoding.encodingly.contexts. Itencripslycodicalcode.encoding. Herecode encoding.encoding, it, it,encoding, it, it, itenc:related.encoding.encoding. Itencoding.encoding.encoding.codencoding:encoding:decode, it:encoding:encoding:encoding:encoding: it:codquestsencoding:encoding:encoding:encoding.cod.encoding.codenc-relatedknowledge.encencodecodencencodingcodencencodingcodenc-encencoding:encoding:encodingstr.encoding:encodingcodencoding,codec.encodingcodencodingcodencoding.encoding, it'sencoding,encoding,encoding,encoding,encoding,encoding,encoding.encoding,metencodingcodecencoding,encoding,encoding,encoding,encodingcodecencoding,encodingcodecencodingcodencodingcodecencoding,codecencoding, andencoding,codec,codecencoding,encencodingcodecencoredencoding,encoding,codicalencoding,encoding,encoding:encoding:encoding,encoding,encodingcodencodingcodecencodingcodencencoding,codecencoding (itencquestions, andcod"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Functionality Extension",
        "test": "tests/config/test_types.py::TestPair::test_deserialize_raises_error_without_separator",
        "completion": "\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the class.\n    The function should be a subclass of the function should be a subclass of the class.\n    The function.\n    The function should be a subclass of the function.\nThe function.\nclass.\n    The function.\nclass.\nclass.\nclass.\nThe function.\nclass.\nclass.\nclass.\nclass.\nclass.function.\nclass.\nclass.function.\nclass.function.\nclass.function.\nclass.function.\nclass.function.\nclass.function.\nclass.function.\nclass.function.\nclass.function.\nclass.function.class.function.function.class.function.\nclass.function.class.function.class.function.\nclass.function.\nclass.function.\nclass.function.\nclass.function.class.\nclass.function.class.\nclass.function.class.\nclass.function.\nclass.\nclass.function.\nclass.\nknowledge.\nlibrary.\nknowledge.\nquestions.\ninformation.\nquest.\nPython.\nrelated.\nknowledge.\nIt.\nquestions.\nquestions.\nquestions.\nquestions.\nrelated.\nquestions.\nanswer.\nquestions.\nquestions.\nquestion.\nquestions.\nquestions.\nquestion. It.\nquestions.\nquestions. It.question.\nquestions.\nquestions.\nquestions. It. It.\nquestions.\nquestions. It. It. It.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nquestions.\nrelated.\nquestions.\ncorcling.\nquestions.\nrelated.\ncode.\nTrue.\nquestions.\nquestions.\nquestions.\nquestions,knowledge.question.\nquestions.questions.questions.\nquestions.\nquestions.\nquestions.\nquestions.\nrelated.\nrelated.\nrelated.\nquestions.\nprogramming.\nquestions.\ncode.\nprogramming.\nrelated.\nquestions.\nquestions.\nquestions.\ncriteria.\ncode.\nencoding.\nkv.\ncriteria.\nknowledge.\ncriteria. The code.\nscope.\nspree.\ncnked. It'srl.\ninformation.\nquestions.\nrelated.\ncode.\nrelated.\nrelated.related:\nrelated.\nre.\nrelated.\ncode.\ncode, it, it.\nre.\ncode.\ncode.\ncode.\ncode. It's. It.\ncode.related.\ncode. It.\nended. It's.\nended.\ncode:\ncodebeck-code. Herecode.\nended. It'sended.code. These.encodecc.encode, anddecodeccalse,codecended.related, thecontexts.\ncc. Itended. It. It. Itended,codask,related,rl,related,related.encoding.related, it're-related-related.decode.relatedlycodling.encoding,codicalsended:rlaskree:codaskla-based. It'codicalcut,encoding andcodec andcode andcontexts, andrlencreecodec.re-related.contexts:encoding.contexts, andrecode:encoding.encoding:encoding, it, itspenc-related, it, it:related:encoding.encoding. Itencoding. Itencencoding:codencoding: it:encoding.encoding:encoding:encoding:encoding: it:encoding:codquestsencoding:encoding:questionsencoding:encoding.encoding.codencoding.characters.codencencodingcodenc, it.codencencoding,encencoding:encoding:encoding:encodingcodecencodingcodicalcodencencoding, itencodingcodencodingcodencoding,encoding, it'sencodingcodecencoding,encoding,encoding.encoding,encoding.encoding.encoding,encoding,encodingcodecencoding,encoding,encoding,encoding,encodingcodecencoding,encodingcodencodingcodecencodingcodecencodingcodecencoding, andencoding,encoding,encoding, theknowledgecodecencencoding, theencoding,codec,codecencoding,encoding,encoding,encoding:encoding,encoding,encoding,encoding, andcodenc-"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Annotation Coverage",
        "test": "tests/config/test_types.py::TestPair::test_deserialize_annotations",
        "completion": "\n    Normally called in :meth:`mopidy.config.deserialize`.\\n    Normally called in :meth:`mopidy.config.deserialize`.\\n    Normally called in :meth:`mopidy.config.deserialize`.\\n    Normally called in :meth:`mopidy.config.deserialize`.\\n    Normally called in :meth:`mopidy.config.deserialize`.\\n    Normally called in :meth:`mopidy.config.deserialize`mopidy.config.config.config.config.config.deserialize`mopty.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config.config. It.config.config.config.config.md. It.\nrelated.\nPython. It. It. It.\nIt.\ninqu.\nquestions.config.config.questions.\nrelated.\nrelated. Please.\ninqu.\nquestions.\nquestions.\nkn. It. It. It. It. It,\nIt. It. It. It. It.config. It. It. It. It. It. It. It. It. It. It. It. It. It.\nfrom thequestions. It. It. It. It. It, and it.config. It.config.config.config.config. It.\nrelated.\nusing.\nutt. It,config.config.config.config.config, it,knowledge.question.\nquestions.questions.\ncc.questions.\nrelated.\ncode.\nrelated.\nrelated.\nrelated.\nrelated.config.config.config.\ncode.\ncode.\nrelated.config.\nquestions.\ncode.\nencoding.\ncn.\nschema. It. It.\ncodices.\ncode. It.\ncriteria.\ncriteria.\nquestion.\nBCask.\ncn. It'srl.\ninformation.\nquestions.\nrelated.\nrelated.\nrelated.\nrelated.related:\nrelated.\nre.\nrelated.\ncode. It.\ncode, it.\nre. It. It.\ncode.\ncode, it.\ncode, it.\ncode.encodecode.\ncode. It.\n   \n   umes. It.\nended. The code:decodekvolecode. It'sended. It's.decodebeck, andcode. Itenccodec.encode, andencodeccalse,codecerracks.questions.contexts.\ncc. Itended.cast. It. Thecontextsended,related, it,rl,related.re-related, it're-relatedcodecencask.decode.related, andre-basedencencoding,code,codicalsecond.encode.encodingla-based, thecontexts, andrealinglyquests/contexts,rlenc-code.contexts.contexts. Itencripsla context.contexts:encoding:encoding.encoding, encoding, it,encoding, it, it, it, it,related.encoding.encoding. Itencoding.encoding. It.code. Itencencoding, it,encoding:encoding:encoding:encoding:encoding: it:encodingcodecencoding:encoding:question:encodingcodec-related.encoding.encodingcod-codencencencoding it, it.codencencoding:encoding:encoding:encoding:decodeencodingcodecencodingcodicalcodencencodingcodec.decode-encodingcodencoding,encoding,encoding,encoding,codecencoding,encoding.encoding.encoding,encoding,encoding.encoding,encoding,encodingcodecencoding,encoding,encoding,encoding,encodingcodencoding,encodingcodencodingcodencencoding,codecencoding, andencoding,codec,encoding, theknowledgecodecencencoding, andcodecencoding,codecencodingcodecencoding,encoding,encoding:encoding:encoding,encoding,encoding:encoding, andcodencencodingcodecencoding"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Code Complexity",
        "test": "tests/config/test_types.py::TestPair::test_deserialize_complexity",
        "completion": "\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int.\nint'int'int. It'int'int'int'sint.\nInt.\ninqu.\nPython.\nrelated.\nit.\nit.\ninquct.\nquestions.\nquestions.\nquestions.\nrelated.\ninquctinquct.\nquestions.\ninquling.\nquestion.\nit.\nit of the program. It.\nit.\nit. It.question. It.\nquestions.\nquestions. It.\nit.int.\nquestions. It. It. It.questions.\ninqucling. It. It.\ninquencoding. It.\nit, it. It'sint.\nit.\nit. It. It.\nrelated. It.\nquestions.\nit.\nquestions.\nit.\nquestions, it,knowledge.question.\nquestions.questions.questions.\nquestions.\nquestions.\nquestions.\ninqucling.\nrelated.\nrelated.\nrelated.\nquestion.\nrelated.\nthatche creek.\nprogramming.\nfromccc.\ninquling.\nquestions.\ninqu's.\ninquencoding. It.\nusing.\ncode. It.\ninquchecut.\ninquling.\ncn.\nccree. It'sack.\nit.\nit.\nrelated. It'srlse.\nrelated.\nrelated:\nrelated.\nre.\nrelated.\ncode. It's, it, it.\ncode. It.\ncode.\ncode:\ncode.\ncode, it.\ncode.encodecode.\ncode. It.\nended.\nended. Herecode.\nencoding. Thetrakn'codec. It'sask.\ncode. It's.decode. The context.decode.codecended, andcodecencode,codecencoding.codec's,asklaeroscc. Itended. Itenc. It. Itenclingerccask, it,rlakes,relatedly.enc-related,relatedcodicalchecodecencaskledencaskledaskling.decode, andcodicalse,endedreeccree.encode.encodingla-related, thecontexts, andrecontexts,codecontextscontexts.enc-encoding.contexts.contexts.contexts.encstracks.contexts: itermencencoding, encoding, it,encoding,cc, it, it, it, it.encoding.encoding. Itencoding.encoding.encoding.code. Itencencoding, it:encoding:encoding:encoding: it'codec: it:encodingcodecencoding:encoding:encoding:encoding:codenc.codencaskstr.codencencodingcodencencodingcodencencoding.encoding,encencoding:encoding:encoding:encodingcodencoding:encodingcodencencodingcodec.decode-encodingcodencoding.encoding, it'sencoding,encoding,encoding,encoding.encoding,encoding.encoding.encoding,encencodingcodecencoding,encoding,encoding,encoding,encodingcodecencoding.encodingcodencodingcodencoding,encoding,codecencoding, andcodecencoding,codecencoding, andencodingrlencoding, andreencoding,codecencoding,codecencoding,encoding,encoding:encoding:encoding,encoding,encoding:encodingccencoding tos,codecencoding (itencencoding"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Code Standard",
        "test": "tests/config/test_types.py::TestPair::test_check_code_style",
        "completion": "\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'\n    The 'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int'int.\nint'int'int. It'int'int'int'sint.\nInt.\ninqu.\nPython. It.\nrelated to theknowledge.\ninquct.\nquestions.\nquestions.\nquestions.\nrelated.\nquestions.\ninquct.\nquestions.\ninquling.\nquestion.\nquestion.\nit of the program. It. It.\nquestions. It.question.\nit.\nquestions.\nquestions. It.\nquestions.\nquestions.questions. It. It. It.questions.\ninquencoding. It. It.\ninquencoding. It.\nthatche, it.\ninqueed.\nit.\nit. It. It.\nrelated.\nit.\nquestions.\nit.\nquestions. It.\nquestions, it,knowledge.question.\nquestions.questions.questions.\nquestions.\nquestions.\nquestions.\ninqucling.\nrelated.\nrelated.\nrelated.\ninquctinquctinqucling.\nrelated.\nprogramming.\nfromccc.\ninquling.\nquestions.\ninqu's.\ninquencoding. It. It.\ninqucling. It.\ninquchecut.\ninqu's.\nBCaskkitended. It'sack.\nit.\nquestions.\nrelated. It'srlse.\nrelated.\nrelated questions:\ncode.\nrelated.\nrelated.\nrelated.\ncode, it, it.\ncode. It.\nencoding.\ncode:\nintercodicalsecc.\ncode.encode.contexts. It'sended.\nended. It'sended.\nencoding. The code:codeplaycode. It'sended. It's.decode. The context. Thechecodecstr.data.decode,codecencaligns.codecencile, thecontexts.laequal. Itenc-based. Itended.enc-related, it,rl,related to the.enc-related context,codendedcodecencencoding.reencoding.codecaskencask-basedencencoding,encended_code andcodicalcodaskla-5,codicalcode:\ncode,encaskencodingcodeccontextscontexts.rlencencoding.contexts.contexts.contexts.encstracks.contextsencquestsencoding,encoding, it, it,encoding, it, it, itenc,related, it.encoding. Itencoding.encoding.encoding.code. Itencencoding, it,encoding:encoding:encoding: it'codecencoding:encodingcodecencodingcodec:encoding:encoding:encoding:codencoding.codencoding.related-relatedknowledge.encencoding,codencencoding.encoding,encencoding:encoding:encoding:encodingcodecencoding:encodingcodencencodingcodec.encodingcodencodingcodencoding,encoding,encoding,encoding,encodingcodecencoding,encoding.encodingcodecencoding,encoding.encoding,encoding,encodingcodecencoding,encoding,encoding,encoding,encodingcodecencoding,encodingcodencodingcodencoding,encoding,codecencoding, andcodecencoding,encoding, andencoding,encoding, andcodencencoding,encoding,codecencoding,encoding,encoding:encoding:encoding,encoding,encoding,encoding,encodingcodenc-relatedcodec (itencoding, and"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Context Usage Verification",
        "test": "tests/config/test_types.py::TestPair::test_deserialize_uses_context",
        "completion": "\nYou are a computer science and programming language.deserialize`\n\nYou are a computer science and programming language.deserialize`\n\nYou are a computer science and programming language.deserialize`\nYou are a computer science and programming language.deserialize`\nYou are a computer science and programming language.deserialize`\n\n\nYou are a computer science and programming language.deserialize`\nYou are a computer science and programming language.deserialize`\nYou are a computer science and programming language.deserialize`\nYou are a computer science and programming language.\nYou are a computer science and programming language.\nYou are a computer science and programming language.\nYou are a computer science and programming language.\nYou are a computer science and programming language.\nYou are a computer science and programming language.\nYou are a computer science and programming language.\nYou are a computer science and programming language.\nYou are a computer science and programming language.\nPython and programming language.\nYou are a computer science and programming language.\n\nPython.\n\nPython language.\nknowledge and programming language.\nPython and programming language and programming language.\nPython.\nlanguage.\nIt.\nknowledge and programming language.\nIt.\nIt.\nIt.\nIt,computer and programming language.\nIt, which programming language.\nIt.\nIt, programming language.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nIt.\nAI.\nknowledge.programming language.\nkit.\nAI.\nto.\nPython.\nrelated.\nit.\nIt.\nquestions.\nquestions.\nquestions.\nquestions.\nrelated.\nquestions.\nanswer.\n inquiries.\ninquling.\nit,programming.\nit,programming of it.\nit.\nit.\nit. It.\nit.\nIt.\nquestions. It. It.\nit.\nquestions.\nit. It. It.\nit.\nquestions.\nit.\nit.\nit.\nit,programming.\nit.\nit.\nit.\nit.\nknowledge.\nit.\nit.\ntries.\ntries.\nit.\nknowledge.\nit,knowledge.question.\nquestions. Questions.\nquestions.\nthatchekcended.\nquestions.\nrelated.\nrelated.\nrelated.\nthatcheccalsaskled.\nthatche creek.\nprogramming.\nrelated.\nquestions.\nfce.\nit.\nknowledge.\nknowledge.\nknowledge.\nkv.\nit.\nknowledge.\ncriteria.\ncriteria.\nknowledge.\nquest.\nquests. It.\nscope.\nit.\nquestions.\nrelated.\ncode.\nrelated.\nrelated.\nrelated questions:\ncode.\ncn.\nrelated.\ncode.\ncode, it, it.\ncode:\ncode.\nencoding.\ncode, it. It of the context.\ncode.encodecode.\ncode. It.\nended. It's code. It. The code:decode:codeplaycode. It'sended. It. It's.decode. The code.decode.codecended, andencodecodices,codecerracksicals,in theencoding. Itended. Itenc-based. Itended.enc-related, it,rlakes,relatedly.encoding.related,relatedcodicalcodecencaskledaskla decode.askling and codingencencoding,enc,encodinglycodical code,codaskla-based. It'codical, andrecondaskencodingcodec andcontexts, andrlencencoding.re-related.relatedlycodicalstrlycodenc.encoding.encoding.encoding.encoding, encoding, it,encoding,codenc, it, itenc,related, it.encoding. Itencoding.encoding. Itenc. It: it:decode,encoding,encoding:encoding:re-encoding:encoding:encodingcodecencodingcodec:encoding:questions:encoding:codenc. It.encodingcodices.codencencenc,codencencoding.encodingcodencencoding:encoding:encoding:encodingcodencodingcodicalcodencencodingcodec.decode-encodingcodencoding,encoding,encoding,encoding,encodingcodecencoding,encoding.encodingcodecencoding,encoding.encoding,encoding,encodingcodecencoding,encoding,encoding,encoding,encodingcodecencoding,encodingcodecencodingcodencencoding,encoding-encoding, andcodecencoding,codec, andencoding,encoding, andcodenc.encoding,codecencodingcodecencoding,encoding,encoding:encoding:encoding,encoding,encoding:encodingccencoding tos,codecencoding (itenc"
    },
    {
        "namespace": "mopidy.config.types.Pair.deserialize",
        "type": "Context Usage Correctness Verification",
        "test": "tests/config/test_types.py::TestPair::test_deserialize_correct_context_usage",
        "completion": "\n    If you are a computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, programming language, computer science model, computer science model, computer science model, programming language, programming language, computer science model, programming language, computer science model, computer science.\nlanguage, computer, programming language, computer science, computer, computer science, programming language, computer science, computer science, programming language, computer science model, computer science, programming language, computer, programming language,computer science.\nlanguage, computer science.\n\ncomputer science,computer science,computer.\nlanguage, computer science.\nlanguage, computer,computer,computer.\nlanguage,computer science.\nlanguage, computer science.\nlanguage.\ncomputer.\nlanguage,computer. It.\nlanguage.programming,computer.\nkit.\ninformation.\nto.\nPython.\nrelated.\nprogramming.\nneg.\nquestions.\nquestions,computer,computer.\nquestions.\nrelated.\nquestions.\nanswer.\nquestions.\nquestions.\nkn.programming,computer,computer,computer. It, programming. It. It. It. It.computer. It.\nquestions,computer,computer,programming.\nquestions.\nquestions. It. It. It. It.\nquestions.\nquestions. It.\nquestions.\nquestions.\nquestions,computer,computer.\nto theprompt.\ncorcling. It.\nquestions.\nprogramming. It.\nquestions,computer,computer,computer,computer,computer,computer,computer,encoding questions.\nquestions.questions.questions.\nquestions.\nquestions.\nquestions.\nquestions.\nrelated.\nrelated.\nrelated.\nquestions.\nprogramming.\nrelated.\nprogramming.\nprogramming.\nrelated.\nquestions.\nquestions.\nquestions.\ncn.\ncode.\nknowledge.\nkv.\ncode.\ncode.\ncriteria.\ncriteria.\nknowledge.\ncode.\nccree. It'sree.\nit.\nse.\nrelated. It'srlakknowledge.\nrelated questions:related.\ncode.\ncn.\nrelated.\ncode.\ncode, it, it.\ncode. It.\ncode.\ncode.\ncode:\ncode, it.\ncode.encodecode.\ncode. It.\nended. It's. It. Thecodec. The code:codeplaycode. It'sended. It's.decode.decode. The code.decode.codecended,codecencodeccullencoding.codecenc's, thecontexts.decode. thecontexts.re-based.decode,codecask,related, it,relatedlycod.encoding.related,relatedcodicalcodecencencoding.decode.decode.askling andre-3,code,encoding:rlaskled.encode.encodingla. It'codicalcode, andreencoding.rlencodingcontexts andcontexts.encree.contexts.contexts.contexts.contextsenc.contexts:encoding.encoding.encoding, it, it,encoding, it, it, itenc:related.encoding.encoding.encoding.encoding. Itencquest. It:encoding:decode,encoding,encoding:encoding:re-encoding:encoding: itcodec.contexts,questions:encoding:encoding.encoding. It.encodingcodenc.codencencencencodingcodicescodencencodingcodencencoding:encoding:encoding:encodingcodecencoding:encodingcodencencodingcodec.decodecodecencoding,encoding,encoding,encoding,encoding,encodingcodecencoding,encoding.encodingcodecencoding,encoding.encoding,encoding,encodingcodecencoding,encoding,encoding,encoding,encodingcodecencoding,encodingcodecencodingcodencencodingcodecencodingcodecenc-code,codecencoding,encoding, theknowledgecodecenc, andrlencoding,codecencodingcodecencoding,encoding,encoding,codecencoding:encoding,encoding,encoding:encodingcodecencoding tos,codecenc (it"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Input-Output Conditions",
        "test": "tests/test_ext.py::TestExtension::test_get_data_dir_returns_path",
        "completion": "\n\n\n\n\n\n\n\n   cd_ndmo-\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n   \n\n   bd-cdask.\n\n\n\n\n\n\n   \n\n\n\n\n\n   \n\n\n\n\n\n   mlask\n\n\n\n   mlask.\n\n\n\n\nmlml-it.\n\n\n\n\n\n\n   ml.\nmlld-ldply-mlmlmlaskcdcl.mdml.\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n   \n\n\n\n\n   \n   \n\n\n   \n   \n   \n   \n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n   \n   mlask\n   \n   mlask:\n\n\n   mlask:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n   \n\n\n\n\n   \n\n\n\n\n\n\n   \n   \n   \n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\nla\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\npyld.\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n   \n\n\n\n\n\n   \nldask.ldask-\n\n\n   py.\n\n\npypy\n\n\n\n\n\n\n\npypycdpy.\n\npycd\n\n\n\n\n\npy-cdask-mdask-cdask-mo-bdmlask:\npybd-moask:\n\n\npy-to-\n\n\nre:\n\n\npy :pypl:mdmlml:\nto:py:py:\n\n\n\n   \n   \n\n\n\n\n\n\n\n   \n\n\n\n\n   bd-re-\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\nre-re.\n\n\n\n\n\n\n\n\npyml.\n\npycdask:\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n   \n\n\n\n\n   \n\n\n\n\n\n\n\n\nld:ldarg:\nld:\n\n\n\n\n\n\n   \n   \n\nldpyplask-re-re-re:\n   \nre-re:\n\nre:\n   \nre-re:\n\n   \n\n\n\n\n\n\n\n\n\n\n\n   mlask:\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n\n\n\n\n\n   re\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   mlmpl:\npymlpymplre\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmd:mdcc\n\n\n   \n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npyccaskpy\n\npyccndpyccmdccmd\n\n\n   uciplep\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Exception Handling",
        "test": "tests/test_ext.py::TestExtension::test_get_data_dir_raises_attribute_error",
        "completion": "\n\n\n\n\n\n\n\n\n   \n   \n   \n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n   \n\n\n\n\n   mlask\n\n\n\n   mlask-\n\n\n\nmlmlcontextldml.\n\n\n\n\n\n   ld.\n\nmlld.ldmpl-mo-moaskml-mo-mo-mo-mo-mo\n\n\n\npromlmplmpl.\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\nmlask\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n   \n\n\n\n\n\n   \n   \n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   ml-moask\n   ml-\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npy-meet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   ldask.\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npy-commands-moaskpybdaskmlpymlpybdaskmlmo:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npy:\n\npyplask:\n\n\n\n\n\n\ntopypro:\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   py:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nre.\nre\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npyask:\n\n\n\n\n\n\n\npyld\n\n\n\n\n\n\n\n\n\n\n\n\npy\n\n\n\n\n\n\n\n\nldmlask:\n\nld\nld\n\n\n\n\n\n   \n\n\n\n\npyplask-\n\n\n\n\n\n\npy-re-\n\n\n\n\n\n\n\n\npy-re\n\npyld.\n\n\n\n\n\n\n\n\n\n\nreml.\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n   \n   \n\n\n   plre\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   mlml:ldmlmlmd:\n\npymlpy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncommands:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npysd-\n\n\n   mlpy\n\n\n\n\n\n\n\n\npyccpy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Edge Case Handling",
        "test": "tests/test_ext.py::TestExtension::test_get_data_dir_raises_os_error_if_file_exists",
        "completion": "\n\n\n\n\n\n\n   \n\n   \n   \n   \n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n   \n\n\n\n   ml.\n\n\n\nmlmpl.\n\n   mlcontext-context.mlldmpl-ldric-mo-mo-ldplyndmlmpl.mdmlmplmplmpls\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nmlask.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n   mo-\n\n\n\n   \n   \n\n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n   \n   \n   \n   \nplask-theml\n\n\nml-the\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmo-command-\n\n\n   \n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npypy-meet-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmoask.\n\n   ldalkaskacask.\n\n\n\npy.py-mo-\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\ncommandspypro-commands-cdopmlpymlcdmlpycdpybd_mo:\npybd-moask:\n\n\n\n\n\n\n\npy:\nre:\npypl:\n\npy:\n   mlask:\npy:\n\npy:\n   \n   \n\n\n\n\n\npycdpycc:\n\n\n    :\n   \n\n\n\n\n\n\n\n\n\ncommands:\n\n\n\n\n\n\n\n\n\n\n   \n\n\npyplinc.\n\n\n\n\n\n\n\n\n\npyml.\n\npycd:\n\n\n\n\npycd:\npycdmlpy\n\n\n\n   \n\n\n\n\n\n   icl\nreaskask:\nmd:\npyld:\n   \n\npybd\n\n\n\n   \n   \n   \npyplaskpyplich-\n\n\n\npypl-mo:\n\npymlpy\n\n\n   igupy\nre\nre-pyld.\n\n\npyldmlpymlml:mlak\n\n\n\n\n\n\n\n\n\n\n   \n\n   \n   \n   \n\npyplpypl\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   mlmlremlmlpy:mdpy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmd:\n\n\n\n\npy\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npynd\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmoccmocc\n\npyccpyccpyccer\n\n\n\n\nccpyccpy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Functionality Extension",
        "test": "tests/test_ext.py::TestExtension::test_get_data_dir_logs_info_on_creation",
        "completion": "\n\n\n\n\n\n\n\n   \n   \n   \n   \n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   mlask-moaskmlmlmlask_pro\n\n\n   \n\n\n\n\n\n\n\n\nmlich-mlichmlml.\n\n\n\n\n   ml.\n\n\n   mlmplacldml.mlml-ld-mo-mo-mo-ldepmlmpls.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\nmlask\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n   \n\n   \n\n\n\n   \n\n\n\n\n\n\n   \n   \n\n\n\n\n   \n   \n\n\n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   mo-it-mo-meet-the\n\n   ml-\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n   \n\n\n\n\n\n   \n\n\n\n   \n   \n   \n\n   \n   \n\n\n   \n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\npy-\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   bdask-\n\n\n\n\n\npyldep-mdask\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npycdask.cdask_commandsbd_pro-bdaskbdaskmlmlmo-mo-pyml-\n\n\n\n\n\n\n\n\npy:\n\nre:\npy:\n   ml:\npy:\npypl:\n   \n   \nto:\n\npy:\n\n\n\n   \nre-commands:\nreask:\n   mlask:\n\n\n   \nreml:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n   py.\nre-directory.\n\n\n\n   \n\n   \n\n\n\n   \n   \n\n\n\n\n\n   \npycdml\n\npypl:\npycdask:\n\n   bdarg:\n    :\n\n\n\npypy\n\n\nld:ld.pyplask\n\n\n\n   \n\n\n\n\n   ld:\n\n\n\npyldpyml.re-replpy\nreask\n\npy\n\nre\nre-re.mdml:pypl:\n\n\n\n\n\n\n\n\n   \n   \n   mlask.\n   \n   plalkal.pl\n   \n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nre:\n\n\n   mlpyml:ml:mlmplre\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmd:mdask.\n\n   ndpyccpycdpycd\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npyccml\n\n   ccmplac   ccpyccmd\n   ccpyccep\n\n\n\n\n\n\npyccmplac\n\n\n\n\n\n\n"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Annotation Coverage",
        "test": "tests/test_ext.py::TestExtension::test_get_data_dir_annotations",
        "completion": "\n\n\n\n\n\n\n\n   \n   \n   \n   \n\n\n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   \n   \n   \n\n   ml-mlask\n\n   ml-mo-mo-mo-\n\nml-mlask.\n\n\n\n\n\n\n\n   ml.py.\n   mlmplacml.\nmlml-ld-mo-mo-mo-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n\n\n\n\n\n\n   \n   \n\n\n\n\n   \n   \n\n\n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   \n   \n   \n   \n\n\n\nmlml-\n   \n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n\n   \n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmo-mo-\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   bd-moask.\n\n\n\n\npyplask-mdask\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npy-cdask.pycd-commandsbd_pro-bdaskbdaskmlmo-mo-pypy-\n\n\n\n\n\n\n\n\n\n\n\n\n\nre:\npy:pycdask:\npypl:pyplask:\n   \nre:\n   \npyld:\n\n\n   \nre-commands.\nreask:\n   \nre:\n\n\n   \nreml:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\npypl.\nre-directory.\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n   bdarg:\n   \n   \n\n\n\n\n\n\n\n\n   \nla\n\n\n\n\n\n\n\n\n\n\n\n\nldpyld:\n\n\n\n\n\n\n\n\nre-re-re-re\n\n\n\n\n\nre\n\n\n\nre-re:\n\n\n\n\n\n\n\n\n\n\n   \n\n   \n   \n   \n   \n   pl-pl.mdplccpy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nre:\n\n\n   \nre:mlml:mo-commands\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmo:mdask:\n\n   \npyccpycdpycd\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmo-\n\n\n   ccmpcc   ccpyccmd\n   ccpyccs\n\n\n\n\n\n\npyccmplac\n\n\n\n\n\n\n"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Code Complexity",
        "test": "tests/test_ext.py::TestExtension::test_get_data_dir_cyclomatic_complexity",
        "completion": "\n\n\n\n\n\n\n   \n   \n   \n   cd_context_bd_ndmd\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n   \n   \n\n   \n   bdask.\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\nit.mlichmlml.\n\n\n\n\n   ml.md.md.cd.\n   ld.mlml.ld-ld-mo-Moacldepmlmpls.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n\n   \n\n\n\n\n\n\n   \n   \n   \n\n\n   \n   \n\n\n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   \n   \n   \n   \n   \n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n   \n   \n\n\n   \n\n   \n   \n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   bdaskask\n\n\n\n\n\n\npyld.mdask\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npycdask.cdask_commandsbd_commandsldcd-bdmlmlmlcd-pypymlml\n\n\npybd-\n\n\n\n\n\n\n\nre:\npy:\nre:\n    : thepy:pypl:\n   \nto:\n   \n\n\n\n\n   \n   \n\nalpyndmlask-pybd:\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n   py\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n   \n   \n   \n\n\n\n\n\n\n\n   \n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n   1\n\n\n\n\n   \n\n\n\n\n\n   bd:\n\n   \n   \n\n\n\n\n\n\n\n\n   \n   \n   \n   \n   \n\n\n\n\n\n\n\n   ld:\n\n\n\n\npyml.\n\n\nrepl.\n\n\n\n\n\n\n\n\n\n\n\n\n\nre.pyld.\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   \n   \n   pl.pl.\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n   \n   mlml:\n   ldmlmo\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   mdask.\n\n   \npyccaskcd\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   ccpycc   \n   \n   \n   \npyccs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Code Standard",
        "test": "tests/test_ext.py::TestExtension::test_check_code_style",
        "completion": "\n\n\n\n\n\n\n\n   \n   \n   \n   \n\n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   \n   \n\n\n   mlask.\n\n   mlmlask.\n\n\n   mlask_mo_mo-moac_ndichmlacribmlml.pycdask.\n   ml.md.md.mlmplac-ml.mlmpl-context-mo-contextribal\n\n\n   mlacmlmlmpl.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n   \n\n\n\n   \n\n\n\n\n   \n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n   \n\n\n\n\n   \n   \n\n   \n\n\n\n\n   \n   \n\n\n   \n   \n   \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   \n   mlask:\n   \n   \n\nmlml-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n   \n\n\n\n\n\n   \n\n\n\n   \n   \n\n\n   \n   \n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npycd_mo-\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\npyldacaskal\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\npypy-pycdaskpycdaskcdask_\n\npyprocdask_moplask:\npypypy\n\nmlask:\n\n\n\n\npy:\n\npy:\n\n\n\n\nre:\npy:py :pypl:\n\n   \nre:\npyld:\n\n\n\n\n   \n\nalpyldalaskaskaskpycdask:\n\n\npycc:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nre.\n   \n\npypy.\nre-re.\n\n\n\n\n\n\n\n\n   \n\n\n   \npycd.\n\n\n\npycdask\n\n\n\n\n\n\n\n\n\n\n\n\n\n   iclargalkac\n   \n\n\n\npy\n\npyld:\nla:\npypl\n\n\n\nre:\n\n\nldpyplask:\n\n\n\n\n\n   \nre-repy\nre-re\n\n\n\n\nreaskpypyld.re:\n\n\n\n   \n\n\n\n\n\n\n   \n\n\n   \n   \n   \n   \n   pl.pl.mplalpypy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n   \n   \n\nmlpyldml:\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmo:mdask-\n\npymdpyccpycdpycd\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmo-\n\n\n\n   mlpyccpyccpycc\n\n   pyccpyccpy\n\n\n\n\n\npyccpyccep\n\n\n\n\n\n"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Context Usage Verification",
        "test": "tests/test_ext.py::TestExtension::test_get_data_dir_uses_context_functions",
        "completion": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   bd_commands\n   bdigercd:\n\n\n\nmo-mo-bdmlml\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n   mlask.mlml-ml.pyml.mdmlml.md.\n\n   mlmpl.md.\nml-bd-Mo-mo-moepldplycdml.mdmlmlmpl.mplmpls-mopl.\n\n\nmlml\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\npropro\n\n\n\n\n\n\n\n\n\npycd-\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n   \nmlml\n\n\n\n\n\n\n\n\n\ncommands.\n\n\n\n\n\n\n\n\n\n\n\n\n\n   mlask.\n\n   \n   \n\n\n   \n   \n   \n\n\n\n   \n\n\n\n\n   \n   \n   \n   \n   \n   \n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n   \n\n\n\n\n\n\ncommands:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   mlask:\n   \n\n\n\n\n   \n   \n\n\n\n\n   \n   \n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npyldpyld.md-\n\n   py.pybd-pypy\n\n\n\n\n\n\n\npypypypy\n\n\n\n\n\n\n\n\n\n\n\n\n\n   pymlpy\n\n\npypypypycdaskmlcdpycdmo-mojo\n\npypr:\nto-mo:\nre:\npy-pyprask-pypr:pycd:\npy:py:\n\n\n\n\n\npypr.pycc:\npypycc:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npycc-\n\n\n\n\n\n\n\n\n\n   \n   \npy-pypr.\n\n\n\n\n\n\n\n\n\npycd-\n\n\n\npycdask.\n\n\npy-pypr\npyml:\n\n\npycd\n\n   \n\n\n\n\n\n\npycd-pycd\npyld.md:\npyld.pycd:\npycc-commands:\n\n\n\npypy\n\n\n   \n   \npy-pymlpy\n\npy-re:\n   \n   igure:\npypyml.\n\n\npypypy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrepl-commands\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n   ml\n\n\n\n   ml.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n   mlpymlpymlpymlre\n\nldmlmdmlmlml:ml:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmd:\n\n\n\n\n\n\npyld\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npymd\n\n\n\n\npymdcc\n\n\npympcc\n\n\n\n\n\n\n\n\npyccnd\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n"
    },
    {
        "namespace": "mopidy.ext.Extension.get_data_dir",
        "type": "Context Usage Correctness Verification",
        "test": "tests/test_ext.py::TestExtension::test_get_data_dir_correctly_uses_ext_name",
        "completion": "\n\n\n\n\n\n\n\n   ml_\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n   mlml-\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n   ml.\n\n\n\n\n\n\n\n\n\n\n   \n   ld.md.ml-ld-mo-mo-mo-ldepndml.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n   \n\n   \n   \n\n\n\n   \n\n\n\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n   \n   mdask,\n\n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npy\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n   ldask\n\n\n\n\n\n\n\n\npy.mo-\n\n\n\n\n\n\n\n\n\n\n\n\n\n   py-\n\n\n\n\n\npy-commandspy-commands-commands-mdmlmlcdmlaskpypymlmlask:\npyml-\n\n\n\n\n\n\n\n\n\n\n\n\n\nre:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npycdask.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmdarg\nld:\n\n\n\n\n\n\n\n\n\n\n   \n   \n   \n\n\n\n\n\n\n\n\n\n\npyld-context:\n\n\n\n\n\n\n\npy:\n   \nre\n\n\n\n\n\n\n\n\n\n\npyldmlml\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n   \n   \n\n   plpy\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\nldmlmlmdmlmlpyld:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmdcc\n\n\n\n\n\n\npycd\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nccmpccmlsldpyccakccpycc\n\n\n\nccpyccep\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Input-Output Conditions",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_input_output_conditions",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Exception Handling",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_dimension_mismatch_exception",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Edge Case Handling",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_empty_input_exception",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Functionality Extension",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_normalize_functionality",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Annotation Coverage",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_annotation_coverage",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Code Complexity",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_code_complexity",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Code Standard",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_check_code_style",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Context Usage Verification",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_preprocess_data_usage",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "diffprivlib.models.linear_regression.LinearRegression.fit",
        "type": "Context Usage Correctness Verification",
        "test": "tests/models/test_LinearRegression.py::TestLinearRegression::test_fit_applies_bounds",
        "completion": "\\x1\\n\\1\\1\\0\\1\\b\\1\\b\\1\\c\\b\\1\\b\\b\\b\\b\\1\\b\\1\\1\\5 \\c\\c\\b\\b\\b\\b\\551\\c\\b\\c\\1\\1\\1\\b\\1\\n\\b\\c\\1\\n\\n\\n\\b\\c\\1\\c\\c\\1\\1\\1\\0\\c\\1\\c\\1\\1\\0\\1\\1\\c\\n\\c\\c\\n\\c\\c\\c\\0\\c\\1\\1\\c\\n\\111\\c111\\n\\0\\1\\1\\1\\11\\n\\c\\n \\c\\n\\0\\n\\n1\\1\\1\\1\\0\\1\\c\\1\\n\\n\\1\\n\\n\\n\\1\\1\\0\\5550\\0\\0\\0\\0\\0\\1\\1\\1\\1\\0\\n\\1\\1\\n\\n\\0\\1\\1\\0\\55 \\n\\n\\n\\50\\0\\1\\n\\0\\n\\0\\1\\n\\1\\b\\n\\n\\n\\n\\0\\0\\n\\1\\0\\55 \\0\\0\\0\\1\\n\\b\\0\\0\\1\\b\\b\\0\\0\\0\\0\\0\\1\\n\\n\\n\\b\\0\\n\\n\\1\\n\\n\\b\\b\\5\\b\\0\\n\\0\\b\\b\\n\\n\\n\\n\\1\\n\\1\\1\\n\\n\\1\\1\\1\\1\\5 \\n\\0\\n\\n\\1\\0\\5\\11\\n\\1\\1\\0\\n\\1\\n\\n\\1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\0\\n\\1\\1\\n\\111\\n\\1\\    \\n\\0\\n\\n\\n0\\0\\n\\n\\0\\1\\1\\0\\1\\n\\0\\n\\1\\ \\\\1\\n\\n\\n\\n\\0\\n\\n\\0\\cl\\n\\0\\0\\1\\n\\0\\11\\1\\n\\1\\n\\n\\n\\0\\n\\n\\n\\n\\1\\1\\0\\n\\n\\1\\1\\1\\1\\1\\1\\    \\\\n\\n\\    \\\\0\\n\\n\\n\\n\\n\\0\\n\\0\\n\\n\\n\\1\\n\\0\\n\\n\\n\\n\\n\\n\\0\\n\\n\\1\\0\\0\\n1\\n\\011\\1\\1\\1\\1\\1\\1\\1\\5\\n\\n\\n\\n\\n\\0\\5\\n0\\0\\1\\1\\0\\1\\1\\n\\n\\1\\n\\00\\n\\n\\n\\n\\5\\n\\n\\n\\1\\0\\11\\0011111\\1\\1\\1\\n\\n\\n\\n\\n\\0\\n55\\n000\\1\\0\\0\\1\\1\\0\\1\\1\\1\\0\\n\\n\\n\\011\\1\\n\\0\\n\\1\\00\\0\\0\\0\\1\\1\\n1\\n\\n\\1\\n\\0\\n\\n\\n\\1\\n\\0\\0\\n\\n\\0\\1\\0\\n\\1\\1\\n\\1\\0\\1\\n\\n\\0\\n\\1\\n\\1\\n\\1\\0\\n\\n1111\\1\\0\\n\\n\\n\\n\\1\\n\\n\\n\\n\\n\\n0\\n\\1\\n\\n1\\5\\n\\n\\n\\n\\n\\n111\\n\\n\\n\\1\\n\\1\\n\\0\\0\\n11\\n0\\1\\1\\1\\11\\"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Input-Output Conditions",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_compute_rarest_windows_input_validation",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Exception Handling",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_compute_rarest_windows_exception_handling",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Edge Case Handling",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_compute_rarest_windows_edge_case_handling",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Functionality Extension",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_compute_rarest_windows_multiple_lengths",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Annotation Coverage",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_compute_rarest_windows_annotations",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Code Complexity",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_compute_rarest_windows_complexity",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Code Standard",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_check_code_style",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Context Usage Verification",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_compute_rarest_windows_context_usage",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    },
    {
        "namespace": "msticpy.analysis.anomalous_sequence.model.Model.compute_rarest_windows",
        "type": "Context Usage Correctness Verification",
        "test": "tests/analysis/test_anom_seq_model.py::TestModel::test_compute_rarest_windows_probability_calculation",
        "completion": "c-c-c.c-c-c-c-coth-c-c-c-c-c-cmlc-c-c-c c-c-cclca c/cclca c, c\nc\ncarkc/c/c/cclca-c\nc-c-c-c-c/c-c-c 1c-c-c-c-c-c-c-c-c-c-cmlc-c-c-c-c-c-c-c-c-c-c 1stakmlc-c/cbsmlca \nc/c\n\n\nc \nc-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c-c/c,\n   \n\nc-c-c\n\ncmlc-c\n\n\n\n\nc\nc-c/c-1-c-c-c-c/c/c-c-c-c/c-c1c1c/c-c-cmlc-c/c\nc-c\nc/c\nc\ncclca c-c-c-c\nc c-22c:c-c\n\n\nc\n\nc\nc\nc\nc-c-cbsmls-c-c.c-c-c-c-c-c-c-c/c-c-c-c/c-c-c\nc/c-c-c/c-c-c-c-c-c-cmlc-cmlc-c1streshc\nc-cokmlc-cokmlc-c-cmlc-c\ncmlc\nc-c-cmlc-c/c/cmlc-c/cmlc-cghc-cclca cmlcokmlc/cokmlc-cmlc-cokmlcmlsmlcmlc, ustmlc cmlsa-cmlc-cokmlc1st-1stghcoksaft11/calsmlsmla11/coklaghcoklaghcmlcokmlsclakmlc-c-c/c/cokmlc,c,c-1b/cdecc/c/c/c-c/cospc/c-c/cothc:\nc-c/c-cokmlc\nc-cclca\ncoksa-c-cghc\nc-cmlc-c\nc-cmlsclakmlc-c\na\nc-cmlc,cghc-cothc/cmlcmlc-c-c-cokmlc-cmlc-cokmlc-cmls-cble\nla\n   \ncsebsmlc/cokmlsa-c-c/cmlcmlsa) \\n/cokmlc,c/cmlca,\ncull\ncmlc/cclrbmlc/cok,\ncokclakmlc,\ncokmlc/cokmlc\ncok\ncok111st\nc\ncokmlcresmlc-cospcghc/c/c/cokmlc,\ncmlcokmlc1strensemlmlrbmlmm,\ncokmlc1st/c/cmlsaftml/c/cokmlca, c/cmlc1stak1111streflaft1111/cmlcaorcemlca,\ncmlmmccmlrbmlcc,c\njumphmlcmclcmbsmlc2nd,\nj,\nc2ndmlv\njoursmlca\ncokmlmm\ncresmlmlmmclakmlakmlcmce-cullcemlcmclmlmpljmlcm1cemlceml-coursmlmlmlmlc,c/criccmlvclakcluremlcmclureml/cullmlakmlcmclmlrbmlcluremluremlccmlccmlmmclmmccmlccmlcmbsmlcc/cospcluremlmmccmlccuokmlcc1111mlccospvclcr/c1/c, cmlrbmlrb/c/cmlmplvml-1\nclca cmlccmlcc"
    }
]